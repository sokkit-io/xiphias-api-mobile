// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: iam/v2/auth_ca_service.proto

package iam

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateAuthCertResponse_Result int32

const (
	// Auth Certificate generated and published successfully.
	UpdateAuthCertResponse_OK UpdateAuthCertResponse_Result = 0
	// Error: Something was invalid about the public key (eg: not a valid key)
	// Recommended action: regenerate key and re-submit with a new public key.
	UpdateAuthCertResponse_INVALID_PUBLIC_KEY UpdateAuthCertResponse_Result = 1
	// Error: Signature invalid and/or does not match
	UpdateAuthCertResponse_NOT_AUTHORIZED UpdateAuthCertResponse_Result = 20
)

// Enum value maps for UpdateAuthCertResponse_Result.
var (
	UpdateAuthCertResponse_Result_name = map[int32]string{
		0:  "OK",
		1:  "INVALID_PUBLIC_KEY",
		20: "NOT_AUTHORIZED",
	}
	UpdateAuthCertResponse_Result_value = map[string]int32{
		"OK":                 0,
		"INVALID_PUBLIC_KEY": 1,
		"NOT_AUTHORIZED":     20,
	}
)

func (x UpdateAuthCertResponse_Result) Enum() *UpdateAuthCertResponse_Result {
	p := new(UpdateAuthCertResponse_Result)
	*p = x
	return p
}

func (x UpdateAuthCertResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateAuthCertResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_iam_v2_auth_ca_service_proto_enumTypes[0].Descriptor()
}

func (UpdateAuthCertResponse_Result) Type() protoreflect.EnumType {
	return &file_iam_v2_auth_ca_service_proto_enumTypes[0]
}

func (x UpdateAuthCertResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateAuthCertResponse_Result.Descriptor instead.
func (UpdateAuthCertResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_iam_v2_auth_ca_service_proto_rawDescGZIP(), []int{1, 0}
}

type UpdateAuthCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bytes of an RSA Public Key certificate in DER format.
	// This is the RSA Public Key of the client which will be signed by the kik-server's CaCert.
	// Notes about this key:
	// - Should be 2048-bit or stronger (although classic allows for as low as 1024-bit)
	PublicKeyDer []byte `protobuf:"bytes,1,opt,name=public_key_der,json=publicKeyDer,proto3" json:"public_key_der,omitempty"`
	// HmacSHA1 Signature bytes of the above public key.
	// Uses the user's passkey as the secret key spec that initializes the HmacSHA1 hash.
	// This signature is only used to validate that the above DER is provided by the user, and is not stored or cached.
	HmacSha1Signature []byte `protobuf:"bytes,2,opt,name=hmac_sha1_signature,json=hmacSha1Signature,proto3" json:"hmac_sha1_signature,omitempty"`
	// Optional.  URL for a previously-published authentication cert.
	// The client should provide this when possible, as it allows the server to potentially validate and re-use a
	// pre-existing already-published cert file.
	PreviousAuthCertUrl string `protobuf:"bytes,3,opt,name=previous_auth_cert_url,json=previousAuthCertUrl,proto3" json:"previous_auth_cert_url,omitempty"`
}

func (x *UpdateAuthCertRequest) Reset() {
	*x = UpdateAuthCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v2_auth_ca_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthCertRequest) ProtoMessage() {}

func (x *UpdateAuthCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v2_auth_ca_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthCertRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthCertRequest) Descriptor() ([]byte, []int) {
	return file_iam_v2_auth_ca_service_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateAuthCertRequest) GetPublicKeyDer() []byte {
	if x != nil {
		return x.PublicKeyDer
	}
	return nil
}

func (x *UpdateAuthCertRequest) GetHmacSha1Signature() []byte {
	if x != nil {
		return x.HmacSha1Signature
	}
	return nil
}

func (x *UpdateAuthCertRequest) GetPreviousAuthCertUrl() string {
	if x != nil {
		return x.PreviousAuthCertUrl
	}
	return ""
}

type UpdateAuthCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UpdateAuthCertResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.iam.v2.UpdateAuthCertResponse_Result" json:"result,omitempty"`
	// Full URL to a kik-signed cert file (.crt) of the client's given public key.
	// Note: this location is not advertised, but is fully open to the public.
	// This value is only present / meaningful when Result == OK
	AuthCertUrl string `protobuf:"bytes,2,opt,name=auth_cert_url,json=authCertUrl,proto3" json:"auth_cert_url,omitempty"`
	// Time after which the published cert will no longer be valid for 3rd-party authentication.
	// Once this expiry time has passed, the client must re-authenticate a new public key.
	// This value is only present / meaningful when Result == OK
	AuthCertExpiry *timestamp.Timestamp `protobuf:"bytes,3,opt,name=auth_cert_expiry,json=authCertExpiry,proto3" json:"auth_cert_expiry,omitempty"`
}

func (x *UpdateAuthCertResponse) Reset() {
	*x = UpdateAuthCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v2_auth_ca_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthCertResponse) ProtoMessage() {}

func (x *UpdateAuthCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v2_auth_ca_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthCertResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuthCertResponse) Descriptor() ([]byte, []int) {
	return file_iam_v2_auth_ca_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateAuthCertResponse) GetResult() UpdateAuthCertResponse_Result {
	if x != nil {
		return x.Result
	}
	return UpdateAuthCertResponse_OK
}

func (x *UpdateAuthCertResponse) GetAuthCertUrl() string {
	if x != nil {
		return x.AuthCertUrl
	}
	return ""
}

func (x *UpdateAuthCertResponse) GetAuthCertExpiry() *timestamp.Timestamp {
	if x != nil {
		return x.AuthCertExpiry
	}
	return nil
}

var File_iam_v2_auth_ca_service_proto protoreflect.FileDescriptor

var file_iam_v2_auth_ca_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x61,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xca, 0x9d, 0x25,
	0x05, 0x08, 0x01, 0x30, 0x80, 0x28, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x44, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x13, 0x68, 0x6d, 0x61, 0x63, 0x5f, 0x73, 0x68, 0x61,
	0x31, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x01, 0x30, 0x80, 0x50, 0x52, 0x11, 0x68, 0x6d,
	0x61, 0x63, 0x53, 0x68, 0x61, 0x31, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x33, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x72,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x91, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d,
	0x25, 0x05, 0x08, 0x00, 0x30, 0x80, 0x50, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x43, 0x65, 0x72,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x43, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x3c, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x4b,
	0x45, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48,
	0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x14, 0x32, 0x69, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x61, 0x12, 0x5f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x65, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x66, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67,
	0x65, 0x6e, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f,
	0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x3b, 0x69, 0x61, 0x6d, 0xa2, 0x02, 0x0e, 0x4b, 0x50, 0x42,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x41, 0x4d, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_iam_v2_auth_ca_service_proto_rawDescOnce sync.Once
	file_iam_v2_auth_ca_service_proto_rawDescData = file_iam_v2_auth_ca_service_proto_rawDesc
)

func file_iam_v2_auth_ca_service_proto_rawDescGZIP() []byte {
	file_iam_v2_auth_ca_service_proto_rawDescOnce.Do(func() {
		file_iam_v2_auth_ca_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_iam_v2_auth_ca_service_proto_rawDescData)
	})
	return file_iam_v2_auth_ca_service_proto_rawDescData
}

var file_iam_v2_auth_ca_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_iam_v2_auth_ca_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_iam_v2_auth_ca_service_proto_goTypes = []interface{}{
	(UpdateAuthCertResponse_Result)(0), // 0: mobile.iam.v2.UpdateAuthCertResponse.Result
	(*UpdateAuthCertRequest)(nil),      // 1: mobile.iam.v2.UpdateAuthCertRequest
	(*UpdateAuthCertResponse)(nil),     // 2: mobile.iam.v2.UpdateAuthCertResponse
	(*timestamp.Timestamp)(nil),        // 3: google.protobuf.Timestamp
}
var file_iam_v2_auth_ca_service_proto_depIdxs = []int32{
	0, // 0: mobile.iam.v2.UpdateAuthCertResponse.result:type_name -> mobile.iam.v2.UpdateAuthCertResponse.Result
	3, // 1: mobile.iam.v2.UpdateAuthCertResponse.auth_cert_expiry:type_name -> google.protobuf.Timestamp
	1, // 2: mobile.iam.v2.AuthCa.UpdateAuthCert:input_type -> mobile.iam.v2.UpdateAuthCertRequest
	2, // 3: mobile.iam.v2.AuthCa.UpdateAuthCert:output_type -> mobile.iam.v2.UpdateAuthCertResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_iam_v2_auth_ca_service_proto_init() }
func file_iam_v2_auth_ca_service_proto_init() {
	if File_iam_v2_auth_ca_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iam_v2_auth_ca_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v2_auth_ca_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iam_v2_auth_ca_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iam_v2_auth_ca_service_proto_goTypes,
		DependencyIndexes: file_iam_v2_auth_ca_service_proto_depIdxs,
		EnumInfos:         file_iam_v2_auth_ca_service_proto_enumTypes,
		MessageInfos:      file_iam_v2_auth_ca_service_proto_msgTypes,
	}.Build()
	File_iam_v2_auth_ca_service_proto = out.File
	file_iam_v2_auth_ca_service_proto_rawDesc = nil
	file_iam_v2_auth_ca_service_proto_goTypes = nil
	file_iam_v2_auth_ca_service_proto_depIdxs = nil
}
