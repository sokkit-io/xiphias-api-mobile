// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: entity/v1/entity_service.proto

package entity

import (
	_go "github.com/sokkit-io/xiphias-model-common/generated/go"
	v11 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v1"
	v1 "github.com/sokkit-io/xiphias-model-common/generated/go/entity/v1"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUsersResponse_Result int32

const (
	GetUsersResponse_OK GetUsersResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetUsersResponse_PARTIAL GetUsersResponse_Result = 1
)

// Enum value maps for GetUsersResponse_Result.
var (
	GetUsersResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetUsersResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetUsersResponse_Result) Enum() *GetUsersResponse_Result {
	p := new(GetUsersResponse_Result)
	*p = x
	return p
}

func (x GetUsersResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUsersResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[0].Descriptor()
}

func (GetUsersResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[0]
}

func (x GetUsersResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUsersResponse_Result.Descriptor instead.
func (GetUsersResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{1, 0}
}

type GetBotsResponse_Result int32

const (
	GetBotsResponse_OK GetBotsResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetBotsResponse_PARTIAL GetBotsResponse_Result = 1
)

// Enum value maps for GetBotsResponse_Result.
var (
	GetBotsResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetBotsResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetBotsResponse_Result) Enum() *GetBotsResponse_Result {
	p := new(GetBotsResponse_Result)
	*p = x
	return p
}

func (x GetBotsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBotsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[1].Descriptor()
}

func (GetBotsResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[1]
}

func (x GetBotsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBotsResponse_Result.Descriptor instead.
func (GetBotsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetUserRosterEntriesResponse_Result int32

const (
	GetUserRosterEntriesResponse_OK GetUserRosterEntriesResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetUserRosterEntriesResponse_PARTIAL GetUserRosterEntriesResponse_Result = 1
)

// Enum value maps for GetUserRosterEntriesResponse_Result.
var (
	GetUserRosterEntriesResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetUserRosterEntriesResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetUserRosterEntriesResponse_Result) Enum() *GetUserRosterEntriesResponse_Result {
	p := new(GetUserRosterEntriesResponse_Result)
	*p = x
	return p
}

func (x GetUserRosterEntriesResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUserRosterEntriesResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[2].Descriptor()
}

func (GetUserRosterEntriesResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[2]
}

func (x GetUserRosterEntriesResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUserRosterEntriesResponse_Result.Descriptor instead.
func (GetUserRosterEntriesResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{5, 0}
}

type GetGroupsResponse_Result int32

const (
	GetGroupsResponse_OK GetGroupsResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetGroupsResponse_PARTIAL GetGroupsResponse_Result = 1
)

// Enum value maps for GetGroupsResponse_Result.
var (
	GetGroupsResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetGroupsResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetGroupsResponse_Result) Enum() *GetGroupsResponse_Result {
	p := new(GetGroupsResponse_Result)
	*p = x
	return p
}

func (x GetGroupsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetGroupsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[3].Descriptor()
}

func (GetGroupsResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[3]
}

func (x GetGroupsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetGroupsResponse_Result.Descriptor instead.
func (GetGroupsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{7, 0}
}

type GetConvosResponse_Result int32

const (
	GetConvosResponse_OK GetConvosResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetConvosResponse_PARTIAL GetConvosResponse_Result = 1
)

// Enum value maps for GetConvosResponse_Result.
var (
	GetConvosResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetConvosResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetConvosResponse_Result) Enum() *GetConvosResponse_Result {
	p := new(GetConvosResponse_Result)
	*p = x
	return p
}

func (x GetConvosResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetConvosResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[4].Descriptor()
}

func (GetConvosResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[4]
}

func (x GetConvosResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetConvosResponse_Result.Descriptor instead.
func (GetConvosResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{9, 0}
}

type GetTrustedBotsResponse_Result int32

const (
	GetTrustedBotsResponse_OK GetTrustedBotsResponse_Result = 0
)

// Enum value maps for GetTrustedBotsResponse_Result.
var (
	GetTrustedBotsResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetTrustedBotsResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetTrustedBotsResponse_Result) Enum() *GetTrustedBotsResponse_Result {
	p := new(GetTrustedBotsResponse_Result)
	*p = x
	return p
}

func (x GetTrustedBotsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTrustedBotsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[5].Descriptor()
}

func (GetTrustedBotsResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[5]
}

func (x GetTrustedBotsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTrustedBotsResponse_Result.Descriptor instead.
func (GetTrustedBotsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{11, 0}
}

type GetGroupRosterEntriesResponse_Result int32

const (
	GetGroupRosterEntriesResponse_OK GetGroupRosterEntriesResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetGroupRosterEntriesResponse_PARTIAL GetGroupRosterEntriesResponse_Result = 1
)

// Enum value maps for GetGroupRosterEntriesResponse_Result.
var (
	GetGroupRosterEntriesResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetGroupRosterEntriesResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetGroupRosterEntriesResponse_Result) Enum() *GetGroupRosterEntriesResponse_Result {
	p := new(GetGroupRosterEntriesResponse_Result)
	*p = x
	return p
}

func (x GetGroupRosterEntriesResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetGroupRosterEntriesResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[6].Descriptor()
}

func (GetGroupRosterEntriesResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[6]
}

func (x GetGroupRosterEntriesResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetGroupRosterEntriesResponse_Result.Descriptor instead.
func (GetGroupRosterEntriesResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{14, 0}
}

type GetUsersByAliasResponse_Result int32

const (
	GetUsersByAliasResponse_OK GetUsersByAliasResponse_Result = 0
	// PARTIAL indicates that an error occurred when retrieving info for some of the requested ids, but other ids may have been retrieved successfully
	GetUsersByAliasResponse_PARTIAL GetUsersByAliasResponse_Result = 1
)

// Enum value maps for GetUsersByAliasResponse_Result.
var (
	GetUsersByAliasResponse_Result_name = map[int32]string{
		0: "OK",
		1: "PARTIAL",
	}
	GetUsersByAliasResponse_Result_value = map[string]int32{
		"OK":      0,
		"PARTIAL": 1,
	}
)

func (x GetUsersByAliasResponse_Result) Enum() *GetUsersByAliasResponse_Result {
	p := new(GetUsersByAliasResponse_Result)
	*p = x
	return p
}

func (x GetUsersByAliasResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUsersByAliasResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_v1_entity_service_proto_enumTypes[7].Descriptor()
}

func (GetUsersByAliasResponse_Result) Type() protoreflect.EnumType {
	return &file_entity_v1_entity_service_proto_enumTypes[7]
}

func (x GetUsersByAliasResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUsersByAliasResponse_Result.Descriptor instead.
func (GetUsersByAliasResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{21, 0}
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*_go.XiBareUserJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUsersRequest) GetIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetUsersResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetUsersResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityUsers.
	//
	// This does _not_ include deleted entities.
	Users []*v1.EntityUser `protobuf:"bytes,10,rep,name=users,proto3" json:"users,omitempty"`
	// The set of XiBareUserJid's that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*_go.XiBareUserJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiBareUserJid's that could not be retrieved, but should _not_ be retried.
	FailedIds []*_go.XiBareUserJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiBareUserJid's that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*_go.XiBareUserJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetUsersResponse) GetResult() GetUsersResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetUsersResponse_OK
}

func (x *GetUsersResponse) GetUsers() []*v1.EntityUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetUsersResponse) GetRetriableIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetUsersResponse) GetFailedIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetUsersResponse) GetNotFoundIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type GetBotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*_go.XiBareUserJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetBotsRequest) Reset() {
	*x = GetBotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotsRequest) ProtoMessage() {}

func (x *GetBotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotsRequest.ProtoReflect.Descriptor instead.
func (*GetBotsRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetBotsRequest) GetIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetBotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetBotsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetBotsResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityBot.
	//
	// This does _not_ include deleted entities.
	Bots []*v1.EntityBot `protobuf:"bytes,10,rep,name=bots,proto3" json:"bots,omitempty"`
	// The set of XiBareUserJid's that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*_go.XiBareUserJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiBareUserJid's that could not be retrieved, but should _not_ be retried.
	FailedIds []*_go.XiBareUserJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiBareUserJid's that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*_go.XiBareUserJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetBotsResponse) Reset() {
	*x = GetBotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotsResponse) ProtoMessage() {}

func (x *GetBotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotsResponse.ProtoReflect.Descriptor instead.
func (*GetBotsResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetBotsResponse) GetResult() GetBotsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetBotsResponse_OK
}

func (x *GetBotsResponse) GetBots() []*v1.EntityBot {
	if x != nil {
		return x.Bots
	}
	return nil
}

func (x *GetBotsResponse) GetRetriableIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetBotsResponse) GetFailedIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetBotsResponse) GetNotFoundIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type GetUserRosterEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*_go.XiBareUserJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetUserRosterEntriesRequest) Reset() {
	*x = GetUserRosterEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRosterEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRosterEntriesRequest) ProtoMessage() {}

func (x *GetUserRosterEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRosterEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetUserRosterEntriesRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserRosterEntriesRequest) GetIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetUserRosterEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetUserRosterEntriesResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetUserRosterEntriesResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityUserRosterEntries.
	//
	// This does _not_ include deleted entities.
	UserRosterEntries []*v1.EntityUserRosterEntry `protobuf:"bytes,10,rep,name=user_roster_entries,json=userRosterEntries,proto3" json:"user_roster_entries,omitempty"`
	// The set of XiBareUserJids that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*_go.XiBareUserJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiBareUserJids that could not be retrieved, but should _not_ be retried.
	FailedIds []*_go.XiBareUserJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiBareUserJids that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*_go.XiBareUserJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetUserRosterEntriesResponse) Reset() {
	*x = GetUserRosterEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRosterEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRosterEntriesResponse) ProtoMessage() {}

func (x *GetUserRosterEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRosterEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetUserRosterEntriesResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserRosterEntriesResponse) GetResult() GetUserRosterEntriesResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetUserRosterEntriesResponse_OK
}

func (x *GetUserRosterEntriesResponse) GetUserRosterEntries() []*v1.EntityUserRosterEntry {
	if x != nil {
		return x.UserRosterEntries
	}
	return nil
}

func (x *GetUserRosterEntriesResponse) GetRetriableIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetUserRosterEntriesResponse) GetFailedIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetUserRosterEntriesResponse) GetNotFoundIds() []*_go.XiBareUserJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*_go.XiGroupJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetGroupsRequest) GetIds() []*_go.XiGroupJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetGroupsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetGroupsResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityGroups.
	//
	// This does _not_ include deleted/not found entities
	Groups []*v1.EntityGroup `protobuf:"bytes,10,rep,name=groups,proto3" json:"groups,omitempty"`
	// The set of XiGroupJid's that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*_go.XiGroupJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiGroupJid's that could not be retrieved, but should _not_ be retried.
	FailedIds []*_go.XiGroupJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiGroupJid's that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*_go.XiGroupJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetGroupsResponse) GetResult() GetGroupsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetGroupsResponse_OK
}

func (x *GetGroupsResponse) GetGroups() []*v1.EntityGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetGroupsResponse) GetRetriableIds() []*_go.XiGroupJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetGroupsResponse) GetFailedIds() []*_go.XiGroupJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetGroupsResponse) GetNotFoundIds() []*_go.XiGroupJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type GetConvosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*v11.XiConvoId `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetConvosRequest) Reset() {
	*x = GetConvosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvosRequest) ProtoMessage() {}

func (x *GetConvosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvosRequest.ProtoReflect.Descriptor instead.
func (*GetConvosRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetConvosRequest) GetIds() []*v11.XiConvoId {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetConvosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetConvosResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetConvosResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityConvo.
	//
	// This does _not_ include deleted/not found entities
	Convos []*v1.EntityConvo `protobuf:"bytes,10,rep,name=convos,proto3" json:"convos,omitempty"`
	// The set of XiConvoId's that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*v11.XiConvoId `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiConvoId's that could not be retrieved, but should _not_ be retried.
	FailedIds []*v11.XiConvoId `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiConvoId's that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*v11.XiConvoId `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetConvosResponse) Reset() {
	*x = GetConvosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConvosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvosResponse) ProtoMessage() {}

func (x *GetConvosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvosResponse.ProtoReflect.Descriptor instead.
func (*GetConvosResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetConvosResponse) GetResult() GetConvosResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetConvosResponse_OK
}

func (x *GetConvosResponse) GetConvos() []*v1.EntityConvo {
	if x != nil {
		return x.Convos
	}
	return nil
}

func (x *GetConvosResponse) GetRetriableIds() []*v11.XiConvoId {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetConvosResponse) GetFailedIds() []*v11.XiConvoId {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetConvosResponse) GetNotFoundIds() []*v11.XiConvoId {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type GetTrustedBotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If pageToken is absent, server will consider this as
	// getting the first page.
	//
	// See GetTrustedBotsResponse, pageToken is that returned from server from the previous
	// call in case of more.
	PageToken *PageToken `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetTrustedBotsRequest) Reset() {
	*x = GetTrustedBotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrustedBotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustedBotsRequest) ProtoMessage() {}

func (x *GetTrustedBotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustedBotsRequest.ProtoReflect.Descriptor instead.
func (*GetTrustedBotsRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTrustedBotsRequest) GetPageToken() *PageToken {
	if x != nil {
		return x.PageToken
	}
	return nil
}

type GetTrustedBotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields are not set when Result != OK
	Result      GetTrustedBotsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetTrustedBotsResponse_Result" json:"result,omitempty"`
	TrustedBots []*_go.XiBareUserJid          `protobuf:"bytes,2,rep,name=trusted_bots,json=trustedBots,proto3" json:"trusted_bots,omitempty"`
	// Only return if there are more come.  This is the token for the next page.
	PageToken *PageToken `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetTrustedBotsResponse) Reset() {
	*x = GetTrustedBotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrustedBotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrustedBotsResponse) ProtoMessage() {}

func (x *GetTrustedBotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrustedBotsResponse.ProtoReflect.Descriptor instead.
func (*GetTrustedBotsResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTrustedBotsResponse) GetResult() GetTrustedBotsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetTrustedBotsResponse_OK
}

func (x *GetTrustedBotsResponse) GetTrustedBots() []*_go.XiBareUserJid {
	if x != nil {
		return x.TrustedBots
	}
	return nil
}

func (x *GetTrustedBotsResponse) GetPageToken() *PageToken {
	if x != nil {
		return x.PageToken
	}
	return nil
}

type PageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PageToken) Reset() {
	*x = PageToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageToken) ProtoMessage() {}

func (x *PageToken) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageToken.ProtoReflect.Descriptor instead.
func (*PageToken) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{12}
}

func (x *PageToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type GetGroupRosterEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*_go.XiGroupJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetGroupRosterEntriesRequest) Reset() {
	*x = GetGroupRosterEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRosterEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRosterEntriesRequest) ProtoMessage() {}

func (x *GetGroupRosterEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRosterEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRosterEntriesRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupRosterEntriesRequest) GetIds() []*_go.XiGroupJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetGroupRosterEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetGroupRosterEntriesResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetGroupRosterEntriesResponse_Result" json:"result,omitempty"`
	// The set of successfully retrieved EntityGroupRosterEntries.
	//
	// This does _not_ include deleted entities.
	GroupRosterEntries []*v1.EntityGroupRosterEntry `protobuf:"bytes,10,rep,name=group_roster_entries,json=groupRosterEntries,proto3" json:"group_roster_entries,omitempty"`
	// The set of XiGroupJids that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*_go.XiGroupJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of XiGroupJids that could not be retrieved, but should _not_ be retried.
	FailedIds []*_go.XiGroupJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of XiGroupJids that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*_go.XiGroupJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetGroupRosterEntriesResponse) Reset() {
	*x = GetGroupRosterEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRosterEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRosterEntriesResponse) ProtoMessage() {}

func (x *GetGroupRosterEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRosterEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetGroupRosterEntriesResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupRosterEntriesResponse) GetResult() GetGroupRosterEntriesResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetGroupRosterEntriesResponse_OK
}

func (x *GetGroupRosterEntriesResponse) GetGroupRosterEntries() []*v1.EntityGroupRosterEntry {
	if x != nil {
		return x.GroupRosterEntries
	}
	return nil
}

func (x *GetGroupRosterEntriesResponse) GetRetriableIds() []*_go.XiGroupJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetGroupRosterEntriesResponse) GetFailedIds() []*_go.XiGroupJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetGroupRosterEntriesResponse) GetNotFoundIds() []*_go.XiGroupJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

type RequestedJid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Making this a oneof to future proof it
	//
	// Types that are assignable to JidType:
	//	*RequestedJid_AliasJid
	JidType isRequestedJid_JidType `protobuf_oneof:"jid_type"`
}

func (x *RequestedJid) Reset() {
	*x = RequestedJid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestedJid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestedJid) ProtoMessage() {}

func (x *RequestedJid) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestedJid.ProtoReflect.Descriptor instead.
func (*RequestedJid) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{15}
}

func (m *RequestedJid) GetJidType() isRequestedJid_JidType {
	if m != nil {
		return m.JidType
	}
	return nil
}

func (x *RequestedJid) GetAliasJid() *v11.XiAliasJid {
	if x, ok := x.GetJidType().(*RequestedJid_AliasJid); ok {
		return x.AliasJid
	}
	return nil
}

type isRequestedJid_JidType interface {
	isRequestedJid_JidType()
}

type RequestedJid_AliasJid struct {
	AliasJid *v11.XiAliasJid `protobuf:"bytes,1,opt,name=alias_jid,json=aliasJid,proto3,oneof"`
}

func (*RequestedJid_AliasJid) isRequestedJid_JidType() {}

type GetUsersByAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*RequestedJid `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetUsersByAliasRequest) Reset() {
	*x = GetUsersByAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByAliasRequest) ProtoMessage() {}

func (x *GetUsersByAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByAliasRequest.ProtoReflect.Descriptor instead.
func (*GetUsersByAliasRequest) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetUsersByAliasRequest) GetIds() []*RequestedJid {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Information that should be available to everyone for group_membership alias jids
type PublicGroupMemberProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An optional BioElement
	BioElement *v1.BioElement `protobuf:"bytes,1,opt,name=bio_element,json=bioElement,proto3" json:"bio_element,omitempty"`
	// An optional Profile Pic Element
	ProfilePic *v1.ProfilePicElement `protobuf:"bytes,2,opt,name=profile_pic,json=profilePic,proto3" json:"profile_pic,omitempty"`
	// An optional Background Pic Extension
	BackgroundProfilePicExtension *v1.BackgroundProfilePicExtensionElement `protobuf:"bytes,3,opt,name=background_profile_pic_extension,json=backgroundProfilePicExtension,proto3" json:"background_profile_pic_extension,omitempty"`
	// An optional Registration Element for user
	RegistrationElement *v1.RegistrationElement `protobuf:"bytes,4,opt,name=registration_element,json=registrationElement,proto3" json:"registration_element,omitempty"`
	// An optional User Interests Element
	InterestsElement *v1.InterestsElement `protobuf:"bytes,5,opt,name=interests_element,json=interestsElement,proto3" json:"interests_element,omitempty"`
	// An optional Emoji status element
	EmojiStatusElement *v1.EmojiStatusElement `protobuf:"bytes,6,opt,name=emoji_status_element,json=emojiStatusElement,proto3" json:"emoji_status_element,omitempty"`
	// An optional Display Name Element
	DisplayName *v1.DisplayNameElement `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// An optional Kin User ID Element
	KinUserIdElement *v1.KinUserIdElement `protobuf:"bytes,8,opt,name=kin_user_id_element,json=kinUserIdElement,proto3" json:"kin_user_id_element,omitempty"`
}

func (x *PublicGroupMemberProfile) Reset() {
	*x = PublicGroupMemberProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicGroupMemberProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicGroupMemberProfile) ProtoMessage() {}

func (x *PublicGroupMemberProfile) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicGroupMemberProfile.ProtoReflect.Descriptor instead.
func (*PublicGroupMemberProfile) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{17}
}

func (x *PublicGroupMemberProfile) GetBioElement() *v1.BioElement {
	if x != nil {
		return x.BioElement
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetProfilePic() *v1.ProfilePicElement {
	if x != nil {
		return x.ProfilePic
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetBackgroundProfilePicExtension() *v1.BackgroundProfilePicExtensionElement {
	if x != nil {
		return x.BackgroundProfilePicExtension
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetRegistrationElement() *v1.RegistrationElement {
	if x != nil {
		return x.RegistrationElement
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetInterestsElement() *v1.InterestsElement {
	if x != nil {
		return x.InterestsElement
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetEmojiStatusElement() *v1.EmojiStatusElement {
	if x != nil {
		return x.EmojiStatusElement
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetDisplayName() *v1.DisplayNameElement {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *PublicGroupMemberProfile) GetKinUserIdElement() *v1.KinUserIdElement {
	if x != nil {
		return x.KinUserIdElement
	}
	return nil
}

// Information that should be available to everyone for anon chat alias jids
type AnonChatMemberProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An optional Profile Pic Element
	ProfilePic *v1.ProfilePicElement `protobuf:"bytes,2,opt,name=profile_pic,json=profilePic,proto3" json:"profile_pic,omitempty"`
	// An optional Registration Element for user.  Will only be available for
	// less restricted anon session privacy types
	RegistrationElement *v1.RegistrationElement `protobuf:"bytes,4,opt,name=registration_element,json=registrationElement,proto3" json:"registration_element,omitempty"`
	// An optional Display Name Element.  This could be a fake display name
	// or a real display name, depending on the anon session's privacy type
	DisplayName *v1.DisplayNameElement `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *AnonChatMemberProfile) Reset() {
	*x = AnonChatMemberProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonChatMemberProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonChatMemberProfile) ProtoMessage() {}

func (x *AnonChatMemberProfile) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonChatMemberProfile.ProtoReflect.Descriptor instead.
func (*AnonChatMemberProfile) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{18}
}

func (x *AnonChatMemberProfile) GetProfilePic() *v1.ProfilePicElement {
	if x != nil {
		return x.ProfilePic
	}
	return nil
}

func (x *AnonChatMemberProfile) GetRegistrationElement() *v1.RegistrationElement {
	if x != nil {
		return x.RegistrationElement
	}
	return nil
}

func (x *AnonChatMemberProfile) GetDisplayName() *v1.DisplayNameElement {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

// Information that is restricted from public view
// Requires a two-way relationship between the caller and alias jid
type PrivateProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An optional User Jid
	Id *_go.XiBareUserJid `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An optional User Name Element
	Username *v1.UsernameElement `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *PrivateProfile) Reset() {
	*x = PrivateProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateProfile) ProtoMessage() {}

func (x *PrivateProfile) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateProfile.ProtoReflect.Descriptor instead.
func (*PrivateProfile) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{19}
}

func (x *PrivateProfile) GetId() *_go.XiBareUserJid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PrivateProfile) GetUsername() *v1.UsernameElement {
	if x != nil {
		return x.Username
	}
	return nil
}

type GetUsersByAliasPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An optional PublicGroupMemberProfile, present for group_membership ajid types
	PublicGroupMemberProfile *PublicGroupMemberProfile `protobuf:"bytes,1,opt,name=public_group_member_profile,json=publicGroupMemberProfile,proto3" json:"public_group_member_profile,omitempty"`
	// An optional AnonChatMemberProfile, should be present for anon_type ajids
	AnonChatMemberProfile *AnonChatMemberProfile `protobuf:"bytes,5,opt,name=anon_chat_member_profile,json=anonChatMemberProfile,proto3" json:"anon_chat_member_profile,omitempty"`
	// An optional PrivateProfile
	PrivateProfile *PrivateProfile `protobuf:"bytes,2,opt,name=private_profile,json=privateProfile,proto3" json:"private_profile,omitempty"`
	// The RequestedJid that this payload pertains to
	Id *RequestedJid `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// The index in the ids field of the original request that this payload is for
	RequestIndex int32 `protobuf:"varint,4,opt,name=request_index,json=requestIndex,proto3" json:"request_index,omitempty"`
}

func (x *GetUsersByAliasPayload) Reset() {
	*x = GetUsersByAliasPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByAliasPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByAliasPayload) ProtoMessage() {}

func (x *GetUsersByAliasPayload) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByAliasPayload.ProtoReflect.Descriptor instead.
func (*GetUsersByAliasPayload) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetUsersByAliasPayload) GetPublicGroupMemberProfile() *PublicGroupMemberProfile {
	if x != nil {
		return x.PublicGroupMemberProfile
	}
	return nil
}

func (x *GetUsersByAliasPayload) GetAnonChatMemberProfile() *AnonChatMemberProfile {
	if x != nil {
		return x.AnonChatMemberProfile
	}
	return nil
}

func (x *GetUsersByAliasPayload) GetPrivateProfile() *PrivateProfile {
	if x != nil {
		return x.PrivateProfile
	}
	return nil
}

func (x *GetUsersByAliasPayload) GetId() *RequestedJid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetUsersByAliasPayload) GetRequestIndex() int32 {
	if x != nil {
		return x.RequestIndex
	}
	return 0
}

type GetUsersByAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   GetUsersByAliasResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.entity.v1.GetUsersByAliasResponse_Result" json:"result,omitempty"`
	Payloads []*GetUsersByAliasPayload      `protobuf:"bytes,10,rep,name=payloads,proto3" json:"payloads,omitempty"`
	// The set of RequestedJid that could not be retrieved, but should be retried.
	//
	// It is strongly encouraged (if not necessary) to retry with the set of retriable_ids,
	// until the set is empty. This mechanism provides a tolerance to transient failures,
	// as well as dealing with internal size restrictions (such as max XMPP response size).
	// Retriable ids should be requested again right away; no backoff or delay is required.
	RetriableIds []*RequestedJid `protobuf:"bytes,11,rep,name=retriable_ids,json=retriableIds,proto3" json:"retriable_ids,omitempty"`
	// The set of RequestedJid that could not be retrieved, but should _not_ be retried.
	FailedIds []*RequestedJid `protobuf:"bytes,12,rep,name=failed_ids,json=failedIds,proto3" json:"failed_ids,omitempty"`
	// The set of RequestedJid that could not be found (either because the entity doesn't
	// exist, or it was deleted).
	NotFoundIds []*RequestedJid `protobuf:"bytes,13,rep,name=not_found_ids,json=notFoundIds,proto3" json:"not_found_ids,omitempty"`
}

func (x *GetUsersByAliasResponse) Reset() {
	*x = GetUsersByAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_v1_entity_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByAliasResponse) ProtoMessage() {}

func (x *GetUsersByAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entity_v1_entity_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByAliasResponse.ProtoReflect.Descriptor instead.
func (*GetUsersByAliasResponse) Descriptor() ([]byte, []int) {
	return file_entity_v1_entity_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetUsersByAliasResponse) GetResult() GetUsersByAliasResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetUsersByAliasResponse_OK
}

func (x *GetUsersByAliasResponse) GetPayloads() []*GetUsersByAliasPayload {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *GetUsersByAliasResponse) GetRetriableIds() []*RequestedJid {
	if x != nil {
		return x.RetriableIds
	}
	return nil
}

func (x *GetUsersByAliasResponse) GetFailedIds() []*RequestedJid {
	if x != nil {
		return x.FailedIds
	}
	return nil
}

func (x *GetUsersByAliasResponse) GetNotFoundIds() []*RequestedJid {
	if x != nil {
		return x.NotFoundIds
	}
	return nil
}

var File_entity_v1_entity_service_proto protoreflect.FileDescriptor

var file_entity_v1_entity_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x42, 0x0b,
	0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x01, 0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xd5, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42,
	0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x69, 0x64, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58,
	0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x0b, 0x6e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x42, 0x0b,
	0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x01, 0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xd0, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x6f,
	0x74, 0x52, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x09,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41,
	0x4c, 0x10, 0x01, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x42, 0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x01,
	0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x92, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x57, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52,
	0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a,
	0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69, 0x64, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69,
	0x64, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x1d,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22, 0x45, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a,
	0x69, 0x64, 0x42, 0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x01, 0x80, 0x01, 0x14, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35,
	0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64,
	0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x31,
	0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64,
	0x73, 0x12, 0x36, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x0b, 0x6e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58, 0x69, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49, 0x64, 0x42,
	0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x01, 0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0xd7, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x76, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76,
	0x6f, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58, 0x69, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49, 0x64, 0x52,
	0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58, 0x69,
	0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49, 0x64, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58, 0x69, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x49, 0x64, 0x52,
	0x0b, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22, 0x53, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xf5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x42,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x69,
	0x64, 0x42, 0x0a, 0xca, 0x9d, 0x25, 0x06, 0x08, 0x00, 0x80, 0x01, 0x88, 0x27, 0x52, 0x0b, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x42, 0x0b, 0xca, 0x9d,
	0x25, 0x07, 0x08, 0x01, 0x78, 0x01, 0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x8e,
	0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x5a, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0d,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x52, 0x09, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4a, 0x69, 0x64, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x73,
	0x22, 0x1d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x22,
	0x50, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4a, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58,
	0x69, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4a, 0x69, 0x64, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x4a, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x6a, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4a, 0x69, 0x64, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05, 0x08, 0x00,
	0x80, 0x01, 0x14, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xbf, 0x05, 0x0a, 0x18, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x62, 0x69, 0x6f, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x62, 0x69, 0x6f, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x12, 0x7f, 0x0a, 0x20, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x69, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1d, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x14, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x14, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x6b, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x6b, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x80, 0x02, 0x0a, 0x15, 0x41,
	0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x12, 0x58, 0x0a, 0x14, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a,
	0x0e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4a,
	0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x69, 0x0a, 0x1b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x18, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x60, 0x0a, 0x18, 0x61,
	0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x15, 0x61, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x49, 0x0a,
	0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4a, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x90, 0x03,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4a, 0x69, 0x64,
	0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3d,
	0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4a,
	0x69, 0x64, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x42, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4a, 0x69, 0x64, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64,
	0x73, 0x22, 0x1d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01,
	0x32, 0x95, 0x06, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x6f,
	0x73, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x28,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5e, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f,
	0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d,
	0x61, 0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_v1_entity_service_proto_rawDescOnce sync.Once
	file_entity_v1_entity_service_proto_rawDescData = file_entity_v1_entity_service_proto_rawDesc
)

func file_entity_v1_entity_service_proto_rawDescGZIP() []byte {
	file_entity_v1_entity_service_proto_rawDescOnce.Do(func() {
		file_entity_v1_entity_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_v1_entity_service_proto_rawDescData)
	})
	return file_entity_v1_entity_service_proto_rawDescData
}

var file_entity_v1_entity_service_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_entity_v1_entity_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_entity_v1_entity_service_proto_goTypes = []interface{}{
	(GetUsersResponse_Result)(0),                    // 0: mobile.entity.v1.GetUsersResponse.Result
	(GetBotsResponse_Result)(0),                     // 1: mobile.entity.v1.GetBotsResponse.Result
	(GetUserRosterEntriesResponse_Result)(0),        // 2: mobile.entity.v1.GetUserRosterEntriesResponse.Result
	(GetGroupsResponse_Result)(0),                   // 3: mobile.entity.v1.GetGroupsResponse.Result
	(GetConvosResponse_Result)(0),                   // 4: mobile.entity.v1.GetConvosResponse.Result
	(GetTrustedBotsResponse_Result)(0),              // 5: mobile.entity.v1.GetTrustedBotsResponse.Result
	(GetGroupRosterEntriesResponse_Result)(0),       // 6: mobile.entity.v1.GetGroupRosterEntriesResponse.Result
	(GetUsersByAliasResponse_Result)(0),             // 7: mobile.entity.v1.GetUsersByAliasResponse.Result
	(*GetUsersRequest)(nil),                         // 8: mobile.entity.v1.GetUsersRequest
	(*GetUsersResponse)(nil),                        // 9: mobile.entity.v1.GetUsersResponse
	(*GetBotsRequest)(nil),                          // 10: mobile.entity.v1.GetBotsRequest
	(*GetBotsResponse)(nil),                         // 11: mobile.entity.v1.GetBotsResponse
	(*GetUserRosterEntriesRequest)(nil),             // 12: mobile.entity.v1.GetUserRosterEntriesRequest
	(*GetUserRosterEntriesResponse)(nil),            // 13: mobile.entity.v1.GetUserRosterEntriesResponse
	(*GetGroupsRequest)(nil),                        // 14: mobile.entity.v1.GetGroupsRequest
	(*GetGroupsResponse)(nil),                       // 15: mobile.entity.v1.GetGroupsResponse
	(*GetConvosRequest)(nil),                        // 16: mobile.entity.v1.GetConvosRequest
	(*GetConvosResponse)(nil),                       // 17: mobile.entity.v1.GetConvosResponse
	(*GetTrustedBotsRequest)(nil),                   // 18: mobile.entity.v1.GetTrustedBotsRequest
	(*GetTrustedBotsResponse)(nil),                  // 19: mobile.entity.v1.GetTrustedBotsResponse
	(*PageToken)(nil),                               // 20: mobile.entity.v1.PageToken
	(*GetGroupRosterEntriesRequest)(nil),            // 21: mobile.entity.v1.GetGroupRosterEntriesRequest
	(*GetGroupRosterEntriesResponse)(nil),           // 22: mobile.entity.v1.GetGroupRosterEntriesResponse
	(*RequestedJid)(nil),                            // 23: mobile.entity.v1.RequestedJid
	(*GetUsersByAliasRequest)(nil),                  // 24: mobile.entity.v1.GetUsersByAliasRequest
	(*PublicGroupMemberProfile)(nil),                // 25: mobile.entity.v1.PublicGroupMemberProfile
	(*AnonChatMemberProfile)(nil),                   // 26: mobile.entity.v1.AnonChatMemberProfile
	(*PrivateProfile)(nil),                          // 27: mobile.entity.v1.PrivateProfile
	(*GetUsersByAliasPayload)(nil),                  // 28: mobile.entity.v1.GetUsersByAliasPayload
	(*GetUsersByAliasResponse)(nil),                 // 29: mobile.entity.v1.GetUsersByAliasResponse
	(*_go.XiBareUserJid)(nil),                       // 30: common.XiBareUserJid
	(*v1.EntityUser)(nil),                           // 31: common.entity.v1.EntityUser
	(*v1.EntityBot)(nil),                            // 32: common.entity.v1.EntityBot
	(*v1.EntityUserRosterEntry)(nil),                // 33: common.entity.v1.EntityUserRosterEntry
	(*_go.XiGroupJid)(nil),                          // 34: common.XiGroupJid
	(*v1.EntityGroup)(nil),                          // 35: common.entity.v1.EntityGroup
	(*v11.XiConvoId)(nil),                           // 36: common.v1.XiConvoId
	(*v1.EntityConvo)(nil),                          // 37: common.entity.v1.EntityConvo
	(*v1.EntityGroupRosterEntry)(nil),               // 38: common.entity.v1.EntityGroupRosterEntry
	(*v11.XiAliasJid)(nil),                          // 39: common.v1.XiAliasJid
	(*v1.BioElement)(nil),                           // 40: common.entity.v1.BioElement
	(*v1.ProfilePicElement)(nil),                    // 41: common.entity.v1.ProfilePicElement
	(*v1.BackgroundProfilePicExtensionElement)(nil), // 42: common.entity.v1.BackgroundProfilePicExtensionElement
	(*v1.RegistrationElement)(nil),                  // 43: common.entity.v1.RegistrationElement
	(*v1.InterestsElement)(nil),                     // 44: common.entity.v1.InterestsElement
	(*v1.EmojiStatusElement)(nil),                   // 45: common.entity.v1.EmojiStatusElement
	(*v1.DisplayNameElement)(nil),                   // 46: common.entity.v1.DisplayNameElement
	(*v1.KinUserIdElement)(nil),                     // 47: common.entity.v1.KinUserIdElement
	(*v1.UsernameElement)(nil),                      // 48: common.entity.v1.UsernameElement
}
var file_entity_v1_entity_service_proto_depIdxs = []int32{
	30, // 0: mobile.entity.v1.GetUsersRequest.ids:type_name -> common.XiBareUserJid
	0,  // 1: mobile.entity.v1.GetUsersResponse.result:type_name -> mobile.entity.v1.GetUsersResponse.Result
	31, // 2: mobile.entity.v1.GetUsersResponse.users:type_name -> common.entity.v1.EntityUser
	30, // 3: mobile.entity.v1.GetUsersResponse.retriable_ids:type_name -> common.XiBareUserJid
	30, // 4: mobile.entity.v1.GetUsersResponse.failed_ids:type_name -> common.XiBareUserJid
	30, // 5: mobile.entity.v1.GetUsersResponse.not_found_ids:type_name -> common.XiBareUserJid
	30, // 6: mobile.entity.v1.GetBotsRequest.ids:type_name -> common.XiBareUserJid
	1,  // 7: mobile.entity.v1.GetBotsResponse.result:type_name -> mobile.entity.v1.GetBotsResponse.Result
	32, // 8: mobile.entity.v1.GetBotsResponse.bots:type_name -> common.entity.v1.EntityBot
	30, // 9: mobile.entity.v1.GetBotsResponse.retriable_ids:type_name -> common.XiBareUserJid
	30, // 10: mobile.entity.v1.GetBotsResponse.failed_ids:type_name -> common.XiBareUserJid
	30, // 11: mobile.entity.v1.GetBotsResponse.not_found_ids:type_name -> common.XiBareUserJid
	30, // 12: mobile.entity.v1.GetUserRosterEntriesRequest.ids:type_name -> common.XiBareUserJid
	2,  // 13: mobile.entity.v1.GetUserRosterEntriesResponse.result:type_name -> mobile.entity.v1.GetUserRosterEntriesResponse.Result
	33, // 14: mobile.entity.v1.GetUserRosterEntriesResponse.user_roster_entries:type_name -> common.entity.v1.EntityUserRosterEntry
	30, // 15: mobile.entity.v1.GetUserRosterEntriesResponse.retriable_ids:type_name -> common.XiBareUserJid
	30, // 16: mobile.entity.v1.GetUserRosterEntriesResponse.failed_ids:type_name -> common.XiBareUserJid
	30, // 17: mobile.entity.v1.GetUserRosterEntriesResponse.not_found_ids:type_name -> common.XiBareUserJid
	34, // 18: mobile.entity.v1.GetGroupsRequest.ids:type_name -> common.XiGroupJid
	3,  // 19: mobile.entity.v1.GetGroupsResponse.result:type_name -> mobile.entity.v1.GetGroupsResponse.Result
	35, // 20: mobile.entity.v1.GetGroupsResponse.groups:type_name -> common.entity.v1.EntityGroup
	34, // 21: mobile.entity.v1.GetGroupsResponse.retriable_ids:type_name -> common.XiGroupJid
	34, // 22: mobile.entity.v1.GetGroupsResponse.failed_ids:type_name -> common.XiGroupJid
	34, // 23: mobile.entity.v1.GetGroupsResponse.not_found_ids:type_name -> common.XiGroupJid
	36, // 24: mobile.entity.v1.GetConvosRequest.ids:type_name -> common.v1.XiConvoId
	4,  // 25: mobile.entity.v1.GetConvosResponse.result:type_name -> mobile.entity.v1.GetConvosResponse.Result
	37, // 26: mobile.entity.v1.GetConvosResponse.convos:type_name -> common.entity.v1.EntityConvo
	36, // 27: mobile.entity.v1.GetConvosResponse.retriable_ids:type_name -> common.v1.XiConvoId
	36, // 28: mobile.entity.v1.GetConvosResponse.failed_ids:type_name -> common.v1.XiConvoId
	36, // 29: mobile.entity.v1.GetConvosResponse.not_found_ids:type_name -> common.v1.XiConvoId
	20, // 30: mobile.entity.v1.GetTrustedBotsRequest.page_token:type_name -> mobile.entity.v1.PageToken
	5,  // 31: mobile.entity.v1.GetTrustedBotsResponse.result:type_name -> mobile.entity.v1.GetTrustedBotsResponse.Result
	30, // 32: mobile.entity.v1.GetTrustedBotsResponse.trusted_bots:type_name -> common.XiBareUserJid
	20, // 33: mobile.entity.v1.GetTrustedBotsResponse.page_token:type_name -> mobile.entity.v1.PageToken
	34, // 34: mobile.entity.v1.GetGroupRosterEntriesRequest.ids:type_name -> common.XiGroupJid
	6,  // 35: mobile.entity.v1.GetGroupRosterEntriesResponse.result:type_name -> mobile.entity.v1.GetGroupRosterEntriesResponse.Result
	38, // 36: mobile.entity.v1.GetGroupRosterEntriesResponse.group_roster_entries:type_name -> common.entity.v1.EntityGroupRosterEntry
	34, // 37: mobile.entity.v1.GetGroupRosterEntriesResponse.retriable_ids:type_name -> common.XiGroupJid
	34, // 38: mobile.entity.v1.GetGroupRosterEntriesResponse.failed_ids:type_name -> common.XiGroupJid
	34, // 39: mobile.entity.v1.GetGroupRosterEntriesResponse.not_found_ids:type_name -> common.XiGroupJid
	39, // 40: mobile.entity.v1.RequestedJid.alias_jid:type_name -> common.v1.XiAliasJid
	23, // 41: mobile.entity.v1.GetUsersByAliasRequest.ids:type_name -> mobile.entity.v1.RequestedJid
	40, // 42: mobile.entity.v1.PublicGroupMemberProfile.bio_element:type_name -> common.entity.v1.BioElement
	41, // 43: mobile.entity.v1.PublicGroupMemberProfile.profile_pic:type_name -> common.entity.v1.ProfilePicElement
	42, // 44: mobile.entity.v1.PublicGroupMemberProfile.background_profile_pic_extension:type_name -> common.entity.v1.BackgroundProfilePicExtensionElement
	43, // 45: mobile.entity.v1.PublicGroupMemberProfile.registration_element:type_name -> common.entity.v1.RegistrationElement
	44, // 46: mobile.entity.v1.PublicGroupMemberProfile.interests_element:type_name -> common.entity.v1.InterestsElement
	45, // 47: mobile.entity.v1.PublicGroupMemberProfile.emoji_status_element:type_name -> common.entity.v1.EmojiStatusElement
	46, // 48: mobile.entity.v1.PublicGroupMemberProfile.display_name:type_name -> common.entity.v1.DisplayNameElement
	47, // 49: mobile.entity.v1.PublicGroupMemberProfile.kin_user_id_element:type_name -> common.entity.v1.KinUserIdElement
	41, // 50: mobile.entity.v1.AnonChatMemberProfile.profile_pic:type_name -> common.entity.v1.ProfilePicElement
	43, // 51: mobile.entity.v1.AnonChatMemberProfile.registration_element:type_name -> common.entity.v1.RegistrationElement
	46, // 52: mobile.entity.v1.AnonChatMemberProfile.display_name:type_name -> common.entity.v1.DisplayNameElement
	30, // 53: mobile.entity.v1.PrivateProfile.id:type_name -> common.XiBareUserJid
	48, // 54: mobile.entity.v1.PrivateProfile.username:type_name -> common.entity.v1.UsernameElement
	25, // 55: mobile.entity.v1.GetUsersByAliasPayload.public_group_member_profile:type_name -> mobile.entity.v1.PublicGroupMemberProfile
	26, // 56: mobile.entity.v1.GetUsersByAliasPayload.anon_chat_member_profile:type_name -> mobile.entity.v1.AnonChatMemberProfile
	27, // 57: mobile.entity.v1.GetUsersByAliasPayload.private_profile:type_name -> mobile.entity.v1.PrivateProfile
	23, // 58: mobile.entity.v1.GetUsersByAliasPayload.id:type_name -> mobile.entity.v1.RequestedJid
	7,  // 59: mobile.entity.v1.GetUsersByAliasResponse.result:type_name -> mobile.entity.v1.GetUsersByAliasResponse.Result
	28, // 60: mobile.entity.v1.GetUsersByAliasResponse.payloads:type_name -> mobile.entity.v1.GetUsersByAliasPayload
	23, // 61: mobile.entity.v1.GetUsersByAliasResponse.retriable_ids:type_name -> mobile.entity.v1.RequestedJid
	23, // 62: mobile.entity.v1.GetUsersByAliasResponse.failed_ids:type_name -> mobile.entity.v1.RequestedJid
	23, // 63: mobile.entity.v1.GetUsersByAliasResponse.not_found_ids:type_name -> mobile.entity.v1.RequestedJid
	8,  // 64: mobile.entity.v1.Entity.GetUsers:input_type -> mobile.entity.v1.GetUsersRequest
	10, // 65: mobile.entity.v1.Entity.GetBots:input_type -> mobile.entity.v1.GetBotsRequest
	14, // 66: mobile.entity.v1.Entity.GetGroups:input_type -> mobile.entity.v1.GetGroupsRequest
	16, // 67: mobile.entity.v1.Entity.GetConvos:input_type -> mobile.entity.v1.GetConvosRequest
	12, // 68: mobile.entity.v1.Entity.GetUserRosterEntries:input_type -> mobile.entity.v1.GetUserRosterEntriesRequest
	21, // 69: mobile.entity.v1.Entity.GetGroupRosterEntries:input_type -> mobile.entity.v1.GetGroupRosterEntriesRequest
	24, // 70: mobile.entity.v1.Entity.GetUsersByAlias:input_type -> mobile.entity.v1.GetUsersByAliasRequest
	18, // 71: mobile.entity.v1.Entity.GetTrustedBots:input_type -> mobile.entity.v1.GetTrustedBotsRequest
	9,  // 72: mobile.entity.v1.Entity.GetUsers:output_type -> mobile.entity.v1.GetUsersResponse
	11, // 73: mobile.entity.v1.Entity.GetBots:output_type -> mobile.entity.v1.GetBotsResponse
	15, // 74: mobile.entity.v1.Entity.GetGroups:output_type -> mobile.entity.v1.GetGroupsResponse
	17, // 75: mobile.entity.v1.Entity.GetConvos:output_type -> mobile.entity.v1.GetConvosResponse
	13, // 76: mobile.entity.v1.Entity.GetUserRosterEntries:output_type -> mobile.entity.v1.GetUserRosterEntriesResponse
	22, // 77: mobile.entity.v1.Entity.GetGroupRosterEntries:output_type -> mobile.entity.v1.GetGroupRosterEntriesResponse
	29, // 78: mobile.entity.v1.Entity.GetUsersByAlias:output_type -> mobile.entity.v1.GetUsersByAliasResponse
	19, // 79: mobile.entity.v1.Entity.GetTrustedBots:output_type -> mobile.entity.v1.GetTrustedBotsResponse
	72, // [72:80] is the sub-list for method output_type
	64, // [64:72] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_entity_v1_entity_service_proto_init() }
func file_entity_v1_entity_service_proto_init() {
	if File_entity_v1_entity_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_v1_entity_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRosterEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRosterEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConvosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrustedBotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrustedBotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRosterEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRosterEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestedJid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicGroupMemberProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonChatMemberProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByAliasPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_v1_entity_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_entity_v1_entity_service_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*RequestedJid_AliasJid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_v1_entity_service_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_entity_v1_entity_service_proto_goTypes,
		DependencyIndexes: file_entity_v1_entity_service_proto_depIdxs,
		EnumInfos:         file_entity_v1_entity_service_proto_enumTypes,
		MessageInfos:      file_entity_v1_entity_service_proto_msgTypes,
	}.Build()
	File_entity_v1_entity_service_proto = out.File
	file_entity_v1_entity_service_proto_rawDesc = nil
	file_entity_v1_entity_service_proto_goTypes = nil
	file_entity_v1_entity_service_proto_depIdxs = nil
}
