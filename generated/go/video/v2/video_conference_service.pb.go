// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: video/v2/video_conference_service.proto

package video

import (
	v21 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/video/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetIceServersResponse_Result int32

const (
	GetIceServersResponse_OK GetIceServersResponse_Result = 0
)

// Enum value maps for GetIceServersResponse_Result.
var (
	GetIceServersResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetIceServersResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetIceServersResponse_Result) Enum() *GetIceServersResponse_Result {
	p := new(GetIceServersResponse_Result)
	*p = x
	return p
}

func (x GetIceServersResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetIceServersResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[0].Descriptor()
}

func (GetIceServersResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[0]
}

func (x GetIceServersResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetIceServersResponse_Result.Descriptor instead.
func (GetIceServersResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{1, 0}
}

type InitiateVideoConferenceResponse_Result int32

const (
	InitiateVideoConferenceResponse_OK InitiateVideoConferenceResponse_Result = 0
	// See conflicting_video_conference_id for explanation of this case
	InitiateVideoConferenceResponse_CONFLICT InitiateVideoConferenceResponse_Result = 1
	// The receiver of the video conference call does not support WebRTC and cannot accept this call.
	// Clients should fall back to the kik classic video service if possible or fail.
	InitiateVideoConferenceResponse_NOT_SUPPORTED InitiateVideoConferenceResponse_Result = 2
)

// Enum value maps for InitiateVideoConferenceResponse_Result.
var (
	InitiateVideoConferenceResponse_Result_name = map[int32]string{
		0: "OK",
		1: "CONFLICT",
		2: "NOT_SUPPORTED",
	}
	InitiateVideoConferenceResponse_Result_value = map[string]int32{
		"OK":            0,
		"CONFLICT":      1,
		"NOT_SUPPORTED": 2,
	}
)

func (x InitiateVideoConferenceResponse_Result) Enum() *InitiateVideoConferenceResponse_Result {
	p := new(InitiateVideoConferenceResponse_Result)
	*p = x
	return p
}

func (x InitiateVideoConferenceResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitiateVideoConferenceResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[1].Descriptor()
}

func (InitiateVideoConferenceResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[1]
}

func (x InitiateVideoConferenceResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitiateVideoConferenceResponse_Result.Descriptor instead.
func (InitiateVideoConferenceResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{3, 0}
}

type JoinVideoConferenceResponse_Result int32

const (
	JoinVideoConferenceResponse_OK        JoinVideoConferenceResponse_Result = 0
	JoinVideoConferenceResponse_NOT_FOUND JoinVideoConferenceResponse_Result = 1
)

// Enum value maps for JoinVideoConferenceResponse_Result.
var (
	JoinVideoConferenceResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	JoinVideoConferenceResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x JoinVideoConferenceResponse_Result) Enum() *JoinVideoConferenceResponse_Result {
	p := new(JoinVideoConferenceResponse_Result)
	*p = x
	return p
}

func (x JoinVideoConferenceResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinVideoConferenceResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[2].Descriptor()
}

func (JoinVideoConferenceResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[2]
}

func (x JoinVideoConferenceResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinVideoConferenceResponse_Result.Descriptor instead.
func (JoinVideoConferenceResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{5, 0}
}

type UpdateIceCandidatesResponse_Result int32

const (
	UpdateIceCandidatesResponse_OK        UpdateIceCandidatesResponse_Result = 0
	UpdateIceCandidatesResponse_NOT_FOUND UpdateIceCandidatesResponse_Result = 1
)

// Enum value maps for UpdateIceCandidatesResponse_Result.
var (
	UpdateIceCandidatesResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	UpdateIceCandidatesResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x UpdateIceCandidatesResponse_Result) Enum() *UpdateIceCandidatesResponse_Result {
	p := new(UpdateIceCandidatesResponse_Result)
	*p = x
	return p
}

func (x UpdateIceCandidatesResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateIceCandidatesResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[3].Descriptor()
}

func (UpdateIceCandidatesResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[3]
}

func (x UpdateIceCandidatesResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateIceCandidatesResponse_Result.Descriptor instead.
func (UpdateIceCandidatesResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{7, 0}
}

type TriggerIceRestartResponse_Result int32

const (
	TriggerIceRestartResponse_OK                  TriggerIceRestartResponse_Result = 0
	TriggerIceRestartResponse_NOT_FOUND           TriggerIceRestartResponse_Result = 1
	TriggerIceRestartResponse_USER_NOT_AUTHORIZED TriggerIceRestartResponse_Result = 2 // returned if the user is not the initiator of the call
)

// Enum value maps for TriggerIceRestartResponse_Result.
var (
	TriggerIceRestartResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "USER_NOT_AUTHORIZED",
	}
	TriggerIceRestartResponse_Result_value = map[string]int32{
		"OK":                  0,
		"NOT_FOUND":           1,
		"USER_NOT_AUTHORIZED": 2,
	}
)

func (x TriggerIceRestartResponse_Result) Enum() *TriggerIceRestartResponse_Result {
	p := new(TriggerIceRestartResponse_Result)
	*p = x
	return p
}

func (x TriggerIceRestartResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerIceRestartResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[4].Descriptor()
}

func (TriggerIceRestartResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[4]
}

func (x TriggerIceRestartResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerIceRestartResponse_Result.Descriptor instead.
func (TriggerIceRestartResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{9, 0}
}

type GetVideoConferenceSessionContentsResponse_Result int32

const (
	GetVideoConferenceSessionContentsResponse_OK        GetVideoConferenceSessionContentsResponse_Result = 0
	GetVideoConferenceSessionContentsResponse_NOT_FOUND GetVideoConferenceSessionContentsResponse_Result = 1
)

// Enum value maps for GetVideoConferenceSessionContentsResponse_Result.
var (
	GetVideoConferenceSessionContentsResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	GetVideoConferenceSessionContentsResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x GetVideoConferenceSessionContentsResponse_Result) Enum() *GetVideoConferenceSessionContentsResponse_Result {
	p := new(GetVideoConferenceSessionContentsResponse_Result)
	*p = x
	return p
}

func (x GetVideoConferenceSessionContentsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetVideoConferenceSessionContentsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[5].Descriptor()
}

func (GetVideoConferenceSessionContentsResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[5]
}

func (x GetVideoConferenceSessionContentsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetVideoConferenceSessionContentsResponse_Result.Descriptor instead.
func (GetVideoConferenceSessionContentsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{11, 0}
}

type NotifyVideoConferenceAliveResponse_Result int32

const (
	NotifyVideoConferenceAliveResponse_OK        NotifyVideoConferenceAliveResponse_Result = 0
	NotifyVideoConferenceAliveResponse_NOT_FOUND NotifyVideoConferenceAliveResponse_Result = 1
)

// Enum value maps for NotifyVideoConferenceAliveResponse_Result.
var (
	NotifyVideoConferenceAliveResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	NotifyVideoConferenceAliveResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x NotifyVideoConferenceAliveResponse_Result) Enum() *NotifyVideoConferenceAliveResponse_Result {
	p := new(NotifyVideoConferenceAliveResponse_Result)
	*p = x
	return p
}

func (x NotifyVideoConferenceAliveResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyVideoConferenceAliveResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[6].Descriptor()
}

func (NotifyVideoConferenceAliveResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[6]
}

func (x NotifyVideoConferenceAliveResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyVideoConferenceAliveResponse_Result.Descriptor instead.
func (NotifyVideoConferenceAliveResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{13, 0}
}

type NotifyVideoConferenceTerminatedResponse_Result int32

const (
	NotifyVideoConferenceTerminatedResponse_OK        NotifyVideoConferenceTerminatedResponse_Result = 0
	NotifyVideoConferenceTerminatedResponse_NOT_FOUND NotifyVideoConferenceTerminatedResponse_Result = 1
)

// Enum value maps for NotifyVideoConferenceTerminatedResponse_Result.
var (
	NotifyVideoConferenceTerminatedResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	NotifyVideoConferenceTerminatedResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x NotifyVideoConferenceTerminatedResponse_Result) Enum() *NotifyVideoConferenceTerminatedResponse_Result {
	p := new(NotifyVideoConferenceTerminatedResponse_Result)
	*p = x
	return p
}

func (x NotifyVideoConferenceTerminatedResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyVideoConferenceTerminatedResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[7].Descriptor()
}

func (NotifyVideoConferenceTerminatedResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[7]
}

func (x NotifyVideoConferenceTerminatedResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyVideoConferenceTerminatedResponse_Result.Descriptor instead.
func (NotifyVideoConferenceTerminatedResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{15, 0}
}

type GetChatIdResponse_Result int32

const (
	GetChatIdResponse_OK            GetChatIdResponse_Result = 0
	GetChatIdResponse_NOT_PERMITTED GetChatIdResponse_Result = 1
)

// Enum value maps for GetChatIdResponse_Result.
var (
	GetChatIdResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_PERMITTED",
	}
	GetChatIdResponse_Result_value = map[string]int32{
		"OK":            0,
		"NOT_PERMITTED": 1,
	}
)

func (x GetChatIdResponse_Result) Enum() *GetChatIdResponse_Result {
	p := new(GetChatIdResponse_Result)
	*p = x
	return p
}

func (x GetChatIdResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetChatIdResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v2_video_conference_service_proto_enumTypes[8].Descriptor()
}

func (GetChatIdResponse_Result) Type() protoreflect.EnumType {
	return &file_video_v2_video_conference_service_proto_enumTypes[8]
}

func (x GetChatIdResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetChatIdResponse_Result.Descriptor instead.
func (GetChatIdResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{17, 0}
}

type GetIceServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIceServersRequest) Reset() {
	*x = GetIceServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIceServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIceServersRequest) ProtoMessage() {}

func (x *GetIceServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIceServersRequest.ProtoReflect.Descriptor instead.
func (*GetIceServersRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{0}
}

type GetIceServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     GetIceServersResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.GetIceServersResponse_Result" json:"result,omitempty"`
	IceServers []*v2.IceServer              `protobuf:"bytes,2,rep,name=ice_servers,json=iceServers,proto3" json:"ice_servers,omitempty"`
}

func (x *GetIceServersResponse) Reset() {
	*x = GetIceServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIceServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIceServersResponse) ProtoMessage() {}

func (x *GetIceServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIceServersResponse.ProtoReflect.Descriptor instead.
func (*GetIceServersResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIceServersResponse) GetResult() GetIceServersResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetIceServersResponse_OK
}

func (x *GetIceServersResponse) GetIceServers() []*v2.IceServer {
	if x != nil {
		return x.IceServers
	}
	return nil
}

type InitiateVideoConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
	WebrtcOffer       *v2.WebRTCOffer       `protobuf:"bytes,3,opt,name=webrtc_offer,json=webrtcOffer,proto3" json:"webrtc_offer,omitempty"`
}

func (x *InitiateVideoConferenceRequest) Reset() {
	*x = InitiateVideoConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateVideoConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateVideoConferenceRequest) ProtoMessage() {}

func (x *InitiateVideoConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateVideoConferenceRequest.ProtoReflect.Descriptor instead.
func (*InitiateVideoConferenceRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{2}
}

func (x *InitiateVideoConferenceRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *InitiateVideoConferenceRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

func (x *InitiateVideoConferenceRequest) GetWebrtcOffer() *v2.WebRTCOffer {
	if x != nil {
		return x.WebrtcOffer
	}
	return nil
}

type InitiateVideoConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result InitiateVideoConferenceResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.InitiateVideoConferenceResponse_Result" json:"result,omitempty"`
	// In case another video conference is conflicting in this chat, this field will be set (and the response result
	// will be set to CONFLICT). Clients should then fetch session details from this ID to join it as the receiver.
	// Conflicts may happen when the receiver of a call has already initiated another call (before this one was received).
	// When seeing a conflict, the client receiving the conflict should recover by fetching the conflicting session
	// and updating its peer connection with the new offer (and therefore becoming the receiver of the call).
	ConflictingVideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=conflicting_video_conference_id,json=conflictingVideoConferenceId,proto3" json:"conflicting_video_conference_id,omitempty"`
}

func (x *InitiateVideoConferenceResponse) Reset() {
	*x = InitiateVideoConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateVideoConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateVideoConferenceResponse) ProtoMessage() {}

func (x *InitiateVideoConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateVideoConferenceResponse.ProtoReflect.Descriptor instead.
func (*InitiateVideoConferenceResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{3}
}

func (x *InitiateVideoConferenceResponse) GetResult() InitiateVideoConferenceResponse_Result {
	if x != nil {
		return x.Result
	}
	return InitiateVideoConferenceResponse_OK
}

func (x *InitiateVideoConferenceResponse) GetConflictingVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.ConflictingVideoConferenceId
	}
	return nil
}

type JoinVideoConferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
	WebrtcAnswer      *v2.WebRTCAnswer      `protobuf:"bytes,3,opt,name=webrtc_answer,json=webrtcAnswer,proto3" json:"webrtc_answer,omitempty"`
}

func (x *JoinVideoConferenceRequest) Reset() {
	*x = JoinVideoConferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinVideoConferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinVideoConferenceRequest) ProtoMessage() {}

func (x *JoinVideoConferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinVideoConferenceRequest.ProtoReflect.Descriptor instead.
func (*JoinVideoConferenceRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{4}
}

func (x *JoinVideoConferenceRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *JoinVideoConferenceRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

func (x *JoinVideoConferenceRequest) GetWebrtcAnswer() *v2.WebRTCAnswer {
	if x != nil {
		return x.WebrtcAnswer
	}
	return nil
}

type JoinVideoConferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result JoinVideoConferenceResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.JoinVideoConferenceResponse_Result" json:"result,omitempty"`
}

func (x *JoinVideoConferenceResponse) Reset() {
	*x = JoinVideoConferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinVideoConferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinVideoConferenceResponse) ProtoMessage() {}

func (x *JoinVideoConferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinVideoConferenceResponse.ProtoReflect.Descriptor instead.
func (*JoinVideoConferenceResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{5}
}

func (x *JoinVideoConferenceResponse) GetResult() JoinVideoConferenceResponse_Result {
	if x != nil {
		return x.Result
	}
	return JoinVideoConferenceResponse_OK
}

type UpdateIceCandidatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
	AddedCandidates   []*v2.IceCandidate    `protobuf:"bytes,3,rep,name=added_candidates,json=addedCandidates,proto3" json:"added_candidates,omitempty"`
	RemovedCandidates []*v2.IceCandidate    `protobuf:"bytes,4,rep,name=removed_candidates,json=removedCandidates,proto3" json:"removed_candidates,omitempty"`
}

func (x *UpdateIceCandidatesRequest) Reset() {
	*x = UpdateIceCandidatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIceCandidatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIceCandidatesRequest) ProtoMessage() {}

func (x *UpdateIceCandidatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIceCandidatesRequest.ProtoReflect.Descriptor instead.
func (*UpdateIceCandidatesRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateIceCandidatesRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *UpdateIceCandidatesRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

func (x *UpdateIceCandidatesRequest) GetAddedCandidates() []*v2.IceCandidate {
	if x != nil {
		return x.AddedCandidates
	}
	return nil
}

func (x *UpdateIceCandidatesRequest) GetRemovedCandidates() []*v2.IceCandidate {
	if x != nil {
		return x.RemovedCandidates
	}
	return nil
}

type UpdateIceCandidatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UpdateIceCandidatesResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.UpdateIceCandidatesResponse_Result" json:"result,omitempty"`
}

func (x *UpdateIceCandidatesResponse) Reset() {
	*x = UpdateIceCandidatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIceCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIceCandidatesResponse) ProtoMessage() {}

func (x *UpdateIceCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIceCandidatesResponse.ProtoReflect.Descriptor instead.
func (*UpdateIceCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateIceCandidatesResponse) GetResult() UpdateIceCandidatesResponse_Result {
	if x != nil {
		return x.Result
	}
	return UpdateIceCandidatesResponse_OK
}

type TriggerIceRestartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
	WebrtcOffer       *v2.WebRTCOffer       `protobuf:"bytes,3,opt,name=webrtc_offer,json=webrtcOffer,proto3" json:"webrtc_offer,omitempty"`
}

func (x *TriggerIceRestartRequest) Reset() {
	*x = TriggerIceRestartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerIceRestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerIceRestartRequest) ProtoMessage() {}

func (x *TriggerIceRestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerIceRestartRequest.ProtoReflect.Descriptor instead.
func (*TriggerIceRestartRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{8}
}

func (x *TriggerIceRestartRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *TriggerIceRestartRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

func (x *TriggerIceRestartRequest) GetWebrtcOffer() *v2.WebRTCOffer {
	if x != nil {
		return x.WebrtcOffer
	}
	return nil
}

type TriggerIceRestartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result TriggerIceRestartResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.TriggerIceRestartResponse_Result" json:"result,omitempty"`
}

func (x *TriggerIceRestartResponse) Reset() {
	*x = TriggerIceRestartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerIceRestartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerIceRestartResponse) ProtoMessage() {}

func (x *TriggerIceRestartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerIceRestartResponse.ProtoReflect.Descriptor instead.
func (*TriggerIceRestartResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{9}
}

func (x *TriggerIceRestartResponse) GetResult() TriggerIceRestartResponse_Result {
	if x != nil {
		return x.Result
	}
	return TriggerIceRestartResponse_OK
}

type GetVideoConferenceSessionContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
}

func (x *GetVideoConferenceSessionContentsRequest) Reset() {
	*x = GetVideoConferenceSessionContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoConferenceSessionContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoConferenceSessionContentsRequest) ProtoMessage() {}

func (x *GetVideoConferenceSessionContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoConferenceSessionContentsRequest.ProtoReflect.Descriptor instead.
func (*GetVideoConferenceSessionContentsRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoConferenceSessionContentsRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *GetVideoConferenceSessionContentsRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

type GetVideoConferenceSessionContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          GetVideoConferenceSessionContentsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.GetVideoConferenceSessionContentsResponse_Result" json:"result,omitempty"`
	SessionContents *v2.VideoConferenceSessionContents               `protobuf:"bytes,2,opt,name=session_contents,json=sessionContents,proto3" json:"session_contents,omitempty"`
}

func (x *GetVideoConferenceSessionContentsResponse) Reset() {
	*x = GetVideoConferenceSessionContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoConferenceSessionContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoConferenceSessionContentsResponse) ProtoMessage() {}

func (x *GetVideoConferenceSessionContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoConferenceSessionContentsResponse.ProtoReflect.Descriptor instead.
func (*GetVideoConferenceSessionContentsResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetVideoConferenceSessionContentsResponse) GetResult() GetVideoConferenceSessionContentsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetVideoConferenceSessionContentsResponse_OK
}

func (x *GetVideoConferenceSessionContentsResponse) GetSessionContents() *v2.VideoConferenceSessionContents {
	if x != nil {
		return x.SessionContents
	}
	return nil
}

type NotifyVideoConferenceAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
}

func (x *NotifyVideoConferenceAliveRequest) Reset() {
	*x = NotifyVideoConferenceAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVideoConferenceAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVideoConferenceAliveRequest) ProtoMessage() {}

func (x *NotifyVideoConferenceAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVideoConferenceAliveRequest.ProtoReflect.Descriptor instead.
func (*NotifyVideoConferenceAliveRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{12}
}

func (x *NotifyVideoConferenceAliveRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *NotifyVideoConferenceAliveRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

type NotifyVideoConferenceAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result NotifyVideoConferenceAliveResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.NotifyVideoConferenceAliveResponse_Result" json:"result,omitempty"`
}

func (x *NotifyVideoConferenceAliveResponse) Reset() {
	*x = NotifyVideoConferenceAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVideoConferenceAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVideoConferenceAliveResponse) ProtoMessage() {}

func (x *NotifyVideoConferenceAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVideoConferenceAliveResponse.ProtoReflect.Descriptor instead.
func (*NotifyVideoConferenceAliveResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyVideoConferenceAliveResponse) GetResult() NotifyVideoConferenceAliveResponse_Result {
	if x != nil {
		return x.Result
	}
	return NotifyVideoConferenceAliveResponse_OK
}

type NotifyVideoConferenceTerminatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId            *v21.ChatId           `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	VideoConferenceId *v2.VideoConferenceId `protobuf:"bytes,2,opt,name=video_conference_id,json=videoConferenceId,proto3" json:"video_conference_id,omitempty"`
}

func (x *NotifyVideoConferenceTerminatedRequest) Reset() {
	*x = NotifyVideoConferenceTerminatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVideoConferenceTerminatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVideoConferenceTerminatedRequest) ProtoMessage() {}

func (x *NotifyVideoConferenceTerminatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVideoConferenceTerminatedRequest.ProtoReflect.Descriptor instead.
func (*NotifyVideoConferenceTerminatedRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyVideoConferenceTerminatedRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *NotifyVideoConferenceTerminatedRequest) GetVideoConferenceId() *v2.VideoConferenceId {
	if x != nil {
		return x.VideoConferenceId
	}
	return nil
}

type NotifyVideoConferenceTerminatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result NotifyVideoConferenceTerminatedResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.NotifyVideoConferenceTerminatedResponse_Result" json:"result,omitempty"`
}

func (x *NotifyVideoConferenceTerminatedResponse) Reset() {
	*x = NotifyVideoConferenceTerminatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyVideoConferenceTerminatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyVideoConferenceTerminatedResponse) ProtoMessage() {}

func (x *NotifyVideoConferenceTerminatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyVideoConferenceTerminatedResponse.ProtoReflect.Descriptor instead.
func (*NotifyVideoConferenceTerminatedResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyVideoConferenceTerminatedResponse) GetResult() NotifyVideoConferenceTerminatedResponse_Result {
	if x != nil {
		return x.Result
	}
	return NotifyVideoConferenceTerminatedResponse_OK
}

type GetChatIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Correspondent *v21.AccountId `protobuf:"bytes,1,opt,name=correspondent,proto3" json:"correspondent,omitempty"`
}

func (x *GetChatIdRequest) Reset() {
	*x = GetChatIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIdRequest) ProtoMessage() {}

func (x *GetChatIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatIdRequest) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetChatIdRequest) GetCorrespondent() *v21.AccountId {
	if x != nil {
		return x.Correspondent
	}
	return nil
}

type GetChatIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetChatIdResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.video.v2.GetChatIdResponse_Result" json:"result,omitempty"`
	// Chat ID associated with the requested correspondent ID. Will only be included if result == OK
	ChatId *v21.ChatId `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *GetChatIdResponse) Reset() {
	*x = GetChatIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_v2_video_conference_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIdResponse) ProtoMessage() {}

func (x *GetChatIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v2_video_conference_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatIdResponse) Descriptor() ([]byte, []int) {
	return file_video_v2_video_conference_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetChatIdResponse) GetResult() GetChatIdResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetChatIdResponse_OK
}

func (x *GetChatIdResponse) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

var File_video_v2_video_conference_service_proto protoreflect.FileDescriptor

var file_video_v2_video_conference_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x09, 0xca, 0x9d,
	0x25, 0x05, 0x78, 0x01, 0x80, 0x01, 0x0a, 0x52, 0x0a, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0xf9, 0x01, 0x0a, 0x1e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x13,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x06, 0xca,
	0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x72,
	0x74, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x22, 0x98, 0x02, 0x0a, 0x1f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x71, 0x0a, 0x1f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x00, 0x52, 0x1c, 0x63, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0xf8, 0x01, 0x0a,
	0x1a, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42,
	0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x5a, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x77,
	0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x77, 0x65, 0x62, 0x72, 0x74,
	0x63, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x4a, 0x6f, 0x69, 0x6e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0xde, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08,
	0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0b, 0xca,
	0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x00, 0x80, 0x01, 0x32, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x12, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x78, 0x00,
	0x80, 0x01, 0x32, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x22, 0xf3, 0x01, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x49, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x11,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x47, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x77,
	0x65, 0x62, 0x72, 0x74, 0x63, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x49, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x22, 0xba, 0x01,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06,
	0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x5a,
	0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42,
	0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x22, 0xb3, 0x01, 0x0a, 0x21, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02,
	0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x13, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25,
	0x02, 0x08, 0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x22, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x26, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x5a, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x11, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x01,
	0x0a, 0x27, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0d, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x00,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x01, 0x32, 0xe1, 0x08,
	0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2b,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x39, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x32, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x6e, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f,
	0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0xa2, 0x02,
	0x10, 0x4b, 0x50, 0x42, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_v2_video_conference_service_proto_rawDescOnce sync.Once
	file_video_v2_video_conference_service_proto_rawDescData = file_video_v2_video_conference_service_proto_rawDesc
)

func file_video_v2_video_conference_service_proto_rawDescGZIP() []byte {
	file_video_v2_video_conference_service_proto_rawDescOnce.Do(func() {
		file_video_v2_video_conference_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_v2_video_conference_service_proto_rawDescData)
	})
	return file_video_v2_video_conference_service_proto_rawDescData
}

var file_video_v2_video_conference_service_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_video_v2_video_conference_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_video_v2_video_conference_service_proto_goTypes = []interface{}{
	(GetIceServersResponse_Result)(0),                     // 0: mobile.video.v2.GetIceServersResponse.Result
	(InitiateVideoConferenceResponse_Result)(0),           // 1: mobile.video.v2.InitiateVideoConferenceResponse.Result
	(JoinVideoConferenceResponse_Result)(0),               // 2: mobile.video.v2.JoinVideoConferenceResponse.Result
	(UpdateIceCandidatesResponse_Result)(0),               // 3: mobile.video.v2.UpdateIceCandidatesResponse.Result
	(TriggerIceRestartResponse_Result)(0),                 // 4: mobile.video.v2.TriggerIceRestartResponse.Result
	(GetVideoConferenceSessionContentsResponse_Result)(0), // 5: mobile.video.v2.GetVideoConferenceSessionContentsResponse.Result
	(NotifyVideoConferenceAliveResponse_Result)(0),        // 6: mobile.video.v2.NotifyVideoConferenceAliveResponse.Result
	(NotifyVideoConferenceTerminatedResponse_Result)(0),   // 7: mobile.video.v2.NotifyVideoConferenceTerminatedResponse.Result
	(GetChatIdResponse_Result)(0),                         // 8: mobile.video.v2.GetChatIdResponse.Result
	(*GetIceServersRequest)(nil),                          // 9: mobile.video.v2.GetIceServersRequest
	(*GetIceServersResponse)(nil),                         // 10: mobile.video.v2.GetIceServersResponse
	(*InitiateVideoConferenceRequest)(nil),                // 11: mobile.video.v2.InitiateVideoConferenceRequest
	(*InitiateVideoConferenceResponse)(nil),               // 12: mobile.video.v2.InitiateVideoConferenceResponse
	(*JoinVideoConferenceRequest)(nil),                    // 13: mobile.video.v2.JoinVideoConferenceRequest
	(*JoinVideoConferenceResponse)(nil),                   // 14: mobile.video.v2.JoinVideoConferenceResponse
	(*UpdateIceCandidatesRequest)(nil),                    // 15: mobile.video.v2.UpdateIceCandidatesRequest
	(*UpdateIceCandidatesResponse)(nil),                   // 16: mobile.video.v2.UpdateIceCandidatesResponse
	(*TriggerIceRestartRequest)(nil),                      // 17: mobile.video.v2.TriggerIceRestartRequest
	(*TriggerIceRestartResponse)(nil),                     // 18: mobile.video.v2.TriggerIceRestartResponse
	(*GetVideoConferenceSessionContentsRequest)(nil),      // 19: mobile.video.v2.GetVideoConferenceSessionContentsRequest
	(*GetVideoConferenceSessionContentsResponse)(nil),     // 20: mobile.video.v2.GetVideoConferenceSessionContentsResponse
	(*NotifyVideoConferenceAliveRequest)(nil),             // 21: mobile.video.v2.NotifyVideoConferenceAliveRequest
	(*NotifyVideoConferenceAliveResponse)(nil),            // 22: mobile.video.v2.NotifyVideoConferenceAliveResponse
	(*NotifyVideoConferenceTerminatedRequest)(nil),        // 23: mobile.video.v2.NotifyVideoConferenceTerminatedRequest
	(*NotifyVideoConferenceTerminatedResponse)(nil),       // 24: mobile.video.v2.NotifyVideoConferenceTerminatedResponse
	(*GetChatIdRequest)(nil),                              // 25: mobile.video.v2.GetChatIdRequest
	(*GetChatIdResponse)(nil),                             // 26: mobile.video.v2.GetChatIdResponse
	(*v2.IceServer)(nil),                                  // 27: common.video.v2.IceServer
	(*v21.ChatId)(nil),                                    // 28: common.v2.ChatId
	(*v2.VideoConferenceId)(nil),                          // 29: common.video.v2.VideoConferenceId
	(*v2.WebRTCOffer)(nil),                                // 30: common.video.v2.WebRTCOffer
	(*v2.WebRTCAnswer)(nil),                               // 31: common.video.v2.WebRTCAnswer
	(*v2.IceCandidate)(nil),                               // 32: common.video.v2.IceCandidate
	(*v2.VideoConferenceSessionContents)(nil),             // 33: common.video.v2.VideoConferenceSessionContents
	(*v21.AccountId)(nil),                                 // 34: common.v2.AccountId
}
var file_video_v2_video_conference_service_proto_depIdxs = []int32{
	0,  // 0: mobile.video.v2.GetIceServersResponse.result:type_name -> mobile.video.v2.GetIceServersResponse.Result
	27, // 1: mobile.video.v2.GetIceServersResponse.ice_servers:type_name -> common.video.v2.IceServer
	28, // 2: mobile.video.v2.InitiateVideoConferenceRequest.chat_id:type_name -> common.v2.ChatId
	29, // 3: mobile.video.v2.InitiateVideoConferenceRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	30, // 4: mobile.video.v2.InitiateVideoConferenceRequest.webrtc_offer:type_name -> common.video.v2.WebRTCOffer
	1,  // 5: mobile.video.v2.InitiateVideoConferenceResponse.result:type_name -> mobile.video.v2.InitiateVideoConferenceResponse.Result
	29, // 6: mobile.video.v2.InitiateVideoConferenceResponse.conflicting_video_conference_id:type_name -> common.video.v2.VideoConferenceId
	28, // 7: mobile.video.v2.JoinVideoConferenceRequest.chat_id:type_name -> common.v2.ChatId
	29, // 8: mobile.video.v2.JoinVideoConferenceRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	31, // 9: mobile.video.v2.JoinVideoConferenceRequest.webrtc_answer:type_name -> common.video.v2.WebRTCAnswer
	2,  // 10: mobile.video.v2.JoinVideoConferenceResponse.result:type_name -> mobile.video.v2.JoinVideoConferenceResponse.Result
	28, // 11: mobile.video.v2.UpdateIceCandidatesRequest.chat_id:type_name -> common.v2.ChatId
	29, // 12: mobile.video.v2.UpdateIceCandidatesRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	32, // 13: mobile.video.v2.UpdateIceCandidatesRequest.added_candidates:type_name -> common.video.v2.IceCandidate
	32, // 14: mobile.video.v2.UpdateIceCandidatesRequest.removed_candidates:type_name -> common.video.v2.IceCandidate
	3,  // 15: mobile.video.v2.UpdateIceCandidatesResponse.result:type_name -> mobile.video.v2.UpdateIceCandidatesResponse.Result
	28, // 16: mobile.video.v2.TriggerIceRestartRequest.chat_id:type_name -> common.v2.ChatId
	29, // 17: mobile.video.v2.TriggerIceRestartRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	30, // 18: mobile.video.v2.TriggerIceRestartRequest.webrtc_offer:type_name -> common.video.v2.WebRTCOffer
	4,  // 19: mobile.video.v2.TriggerIceRestartResponse.result:type_name -> mobile.video.v2.TriggerIceRestartResponse.Result
	28, // 20: mobile.video.v2.GetVideoConferenceSessionContentsRequest.chat_id:type_name -> common.v2.ChatId
	29, // 21: mobile.video.v2.GetVideoConferenceSessionContentsRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	5,  // 22: mobile.video.v2.GetVideoConferenceSessionContentsResponse.result:type_name -> mobile.video.v2.GetVideoConferenceSessionContentsResponse.Result
	33, // 23: mobile.video.v2.GetVideoConferenceSessionContentsResponse.session_contents:type_name -> common.video.v2.VideoConferenceSessionContents
	28, // 24: mobile.video.v2.NotifyVideoConferenceAliveRequest.chat_id:type_name -> common.v2.ChatId
	29, // 25: mobile.video.v2.NotifyVideoConferenceAliveRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	6,  // 26: mobile.video.v2.NotifyVideoConferenceAliveResponse.result:type_name -> mobile.video.v2.NotifyVideoConferenceAliveResponse.Result
	28, // 27: mobile.video.v2.NotifyVideoConferenceTerminatedRequest.chat_id:type_name -> common.v2.ChatId
	29, // 28: mobile.video.v2.NotifyVideoConferenceTerminatedRequest.video_conference_id:type_name -> common.video.v2.VideoConferenceId
	7,  // 29: mobile.video.v2.NotifyVideoConferenceTerminatedResponse.result:type_name -> mobile.video.v2.NotifyVideoConferenceTerminatedResponse.Result
	34, // 30: mobile.video.v2.GetChatIdRequest.correspondent:type_name -> common.v2.AccountId
	8,  // 31: mobile.video.v2.GetChatIdResponse.result:type_name -> mobile.video.v2.GetChatIdResponse.Result
	28, // 32: mobile.video.v2.GetChatIdResponse.chat_id:type_name -> common.v2.ChatId
	9,  // 33: mobile.video.v2.VideoConference.GetIceServers:input_type -> mobile.video.v2.GetIceServersRequest
	11, // 34: mobile.video.v2.VideoConference.InitiateVideoConference:input_type -> mobile.video.v2.InitiateVideoConferenceRequest
	13, // 35: mobile.video.v2.VideoConference.JoinVideoConference:input_type -> mobile.video.v2.JoinVideoConferenceRequest
	15, // 36: mobile.video.v2.VideoConference.UpdateIceCandidates:input_type -> mobile.video.v2.UpdateIceCandidatesRequest
	17, // 37: mobile.video.v2.VideoConference.TriggerIceRestart:input_type -> mobile.video.v2.TriggerIceRestartRequest
	19, // 38: mobile.video.v2.VideoConference.GetVideoConferenceSessionContents:input_type -> mobile.video.v2.GetVideoConferenceSessionContentsRequest
	21, // 39: mobile.video.v2.VideoConference.NotifyVideoConferenceAlive:input_type -> mobile.video.v2.NotifyVideoConferenceAliveRequest
	23, // 40: mobile.video.v2.VideoConference.NotifyVideoConferenceTerminated:input_type -> mobile.video.v2.NotifyVideoConferenceTerminatedRequest
	25, // 41: mobile.video.v2.VideoConference.GetChatId:input_type -> mobile.video.v2.GetChatIdRequest
	10, // 42: mobile.video.v2.VideoConference.GetIceServers:output_type -> mobile.video.v2.GetIceServersResponse
	12, // 43: mobile.video.v2.VideoConference.InitiateVideoConference:output_type -> mobile.video.v2.InitiateVideoConferenceResponse
	14, // 44: mobile.video.v2.VideoConference.JoinVideoConference:output_type -> mobile.video.v2.JoinVideoConferenceResponse
	16, // 45: mobile.video.v2.VideoConference.UpdateIceCandidates:output_type -> mobile.video.v2.UpdateIceCandidatesResponse
	18, // 46: mobile.video.v2.VideoConference.TriggerIceRestart:output_type -> mobile.video.v2.TriggerIceRestartResponse
	20, // 47: mobile.video.v2.VideoConference.GetVideoConferenceSessionContents:output_type -> mobile.video.v2.GetVideoConferenceSessionContentsResponse
	22, // 48: mobile.video.v2.VideoConference.NotifyVideoConferenceAlive:output_type -> mobile.video.v2.NotifyVideoConferenceAliveResponse
	24, // 49: mobile.video.v2.VideoConference.NotifyVideoConferenceTerminated:output_type -> mobile.video.v2.NotifyVideoConferenceTerminatedResponse
	26, // 50: mobile.video.v2.VideoConference.GetChatId:output_type -> mobile.video.v2.GetChatIdResponse
	42, // [42:51] is the sub-list for method output_type
	33, // [33:42] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_video_v2_video_conference_service_proto_init() }
func file_video_v2_video_conference_service_proto_init() {
	if File_video_v2_video_conference_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_v2_video_conference_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIceServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIceServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateVideoConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateVideoConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinVideoConferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinVideoConferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIceCandidatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIceCandidatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerIceRestartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerIceRestartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoConferenceSessionContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoConferenceSessionContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVideoConferenceAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVideoConferenceAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVideoConferenceTerminatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyVideoConferenceTerminatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_v2_video_conference_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_v2_video_conference_service_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_v2_video_conference_service_proto_goTypes,
		DependencyIndexes: file_video_v2_video_conference_service_proto_depIdxs,
		EnumInfos:         file_video_v2_video_conference_service_proto_enumTypes,
		MessageInfos:      file_video_v2_video_conference_service_proto_msgTypes,
	}.Build()
	File_video_v2_video_conference_service_proto = out.File
	file_video_v2_video_conference_service_proto_rawDesc = nil
	file_video_v2_video_conference_service_proto_goTypes = nil
	file_video_v2_video_conference_service_proto_depIdxs = nil
}
