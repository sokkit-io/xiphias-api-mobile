// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: masks/v1/masksdata_service.proto

package masksdata

import (
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the list to be served. Ignored by GetProductionList\GetStageList.
	RequestedListVersion string `protobuf:"bytes,1,opt,name=requested_list_version,json=requestedListVersion,proto3" json:"requested_list_version,omitempty"` // sanity bound
	// The version of the list the client currently holds.
	LocalListVersion string `protobuf:"bytes,2,opt,name=local_list_version,json=localListVersion,proto3" json:"local_list_version,omitempty"` // sanity bound
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_masks_v1_masksdata_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_masks_v1_masksdata_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_masks_v1_masksdata_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListRequest) GetRequestedListVersion() string {
	if x != nil {
		return x.RequestedListVersion
	}
	return ""
}

func (x *ListRequest) GetLocalListVersion() string {
	if x != nil {
		return x.LocalListVersion
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string         `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Resources []*MaskDetails `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_masks_v1_masksdata_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_masks_v1_masksdata_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_masks_v1_masksdata_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListResponse) GetResources() []*MaskDetails {
	if x != nil {
		return x.Resources
	}
	return nil
}

// An object describing a sequence of png images that are layered over the video feed.
// The video feed size is assumed to be VGA portrait (480*640)
type MaskDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A UUID, the mask's id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Mask name, might be user facing.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// URL of the filter's thumbnail to display on the selection bar
	ThumbnailUrl string `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	// The number of frames in this seqeunce
	FrameCount uint32 `protobuf:"varint,4,opt,name=frame_count,json=frameCount,proto3" json:"frame_count,omitempty"`
	// Frames per second
	FrameRate uint32 `protobuf:"varint,5,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	// Number of times to play. 0 = infinite.
	LoopCount uint32 `protobuf:"varint,6,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	// URL of a zip file with all the sequence images
	SequenceArchiveLocation string `protobuf:"bytes,7,opt,name=sequence_archive_location,json=sequenceArchiveLocation,proto3" json:"sequence_archive_location,omitempty"`
	// the index order in which to play the frames. If not set then frames default order applies.
	SequenceOrder []int32 `protobuf:"varint,8,rep,packed,name=sequence_order,json=sequenceOrder,proto3" json:"sequence_order,omitempty"`
	// The frame in which to place the image sequence over the stream
	Rectangle *MaskDetails_Rectangle `protobuf:"bytes,9,opt,name=rectangle,proto3" json:"rectangle,omitempty"`
}

func (x *MaskDetails) Reset() {
	*x = MaskDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_masks_v1_masksdata_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskDetails) ProtoMessage() {}

func (x *MaskDetails) ProtoReflect() protoreflect.Message {
	mi := &file_masks_v1_masksdata_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskDetails.ProtoReflect.Descriptor instead.
func (*MaskDetails) Descriptor() ([]byte, []int) {
	return file_masks_v1_masksdata_service_proto_rawDescGZIP(), []int{2}
}

func (x *MaskDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaskDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MaskDetails) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *MaskDetails) GetFrameCount() uint32 {
	if x != nil {
		return x.FrameCount
	}
	return 0
}

func (x *MaskDetails) GetFrameRate() uint32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *MaskDetails) GetLoopCount() uint32 {
	if x != nil {
		return x.LoopCount
	}
	return 0
}

func (x *MaskDetails) GetSequenceArchiveLocation() string {
	if x != nil {
		return x.SequenceArchiveLocation
	}
	return ""
}

func (x *MaskDetails) GetSequenceOrder() []int32 {
	if x != nil {
		return x.SequenceOrder
	}
	return nil
}

func (x *MaskDetails) GetRectangle() *MaskDetails_Rectangle {
	if x != nil {
		return x.Rectangle
	}
	return nil
}

type MaskDetails_Rectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top    int32 `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Left   int32 `protobuf:"varint,2,opt,name=left,proto3" json:"left,omitempty"`
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MaskDetails_Rectangle) Reset() {
	*x = MaskDetails_Rectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_masks_v1_masksdata_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskDetails_Rectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskDetails_Rectangle) ProtoMessage() {}

func (x *MaskDetails_Rectangle) ProtoReflect() protoreflect.Message {
	mi := &file_masks_v1_masksdata_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskDetails_Rectangle.ProtoReflect.Descriptor instead.
func (*MaskDetails_Rectangle) Descriptor() ([]byte, []int) {
	return file_masks_v1_masksdata_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MaskDetails_Rectangle) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *MaskDetails_Rectangle) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *MaskDetails_Rectangle) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MaskDetails_Rectangle) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_masks_v1_masksdata_service_proto protoreflect.FileDescriptor

var file_masks_v1_masksdata_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x73, 0x6b, 0x73,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83,
	0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xca, 0x9d, 0x25, 0x03, 0x30, 0xa3, 0x10, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03, 0x30,
	0xa3, 0x10, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0c, 0xca, 0x9d, 0x25, 0x08, 0x08, 0x01, 0x78,
	0x01, 0x80, 0x01, 0xc8, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0xb4, 0x04, 0x0a, 0x0b, 0x4d, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0x9d, 0x25,
	0x07, 0x08, 0x01, 0x28, 0x01, 0x30, 0xa3, 0x10, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xca, 0x9d, 0x25,
	0x02, 0x08, 0x01, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x09, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02,
	0x08, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a,
	0x19, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xca, 0x9d, 0x25, 0x07, 0x08, 0x01, 0x28, 0x01, 0x30, 0xa3, 0x10, 0x52, 0x17, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x42, 0x09,
	0xca, 0x9d, 0x25, 0x05, 0x78, 0x00, 0x80, 0x01, 0x64, 0x52, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x74,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0x7f, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x1a, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xca, 0x9d, 0x25,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0xf9, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x73, 0x6b,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d,
	0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61,
	0x73, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x60, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x6d,
	0x61, 0x73, 0x6b, 0x73, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x47, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d,
	0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x67, 0x6f, 0x2f, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x73, 0x6b,
	0x73, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_masks_v1_masksdata_service_proto_rawDescOnce sync.Once
	file_masks_v1_masksdata_service_proto_rawDescData = file_masks_v1_masksdata_service_proto_rawDesc
)

func file_masks_v1_masksdata_service_proto_rawDescGZIP() []byte {
	file_masks_v1_masksdata_service_proto_rawDescOnce.Do(func() {
		file_masks_v1_masksdata_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_masks_v1_masksdata_service_proto_rawDescData)
	})
	return file_masks_v1_masksdata_service_proto_rawDescData
}

var file_masks_v1_masksdata_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_masks_v1_masksdata_service_proto_goTypes = []interface{}{
	(*ListRequest)(nil),           // 0: mobile.masks.v1.ListRequest
	(*ListResponse)(nil),          // 1: mobile.masks.v1.ListResponse
	(*MaskDetails)(nil),           // 2: mobile.masks.v1.MaskDetails
	(*MaskDetails_Rectangle)(nil), // 3: mobile.masks.v1.MaskDetails.Rectangle
}
var file_masks_v1_masksdata_service_proto_depIdxs = []int32{
	2, // 0: mobile.masks.v1.ListResponse.resources:type_name -> mobile.masks.v1.MaskDetails
	3, // 1: mobile.masks.v1.MaskDetails.rectangle:type_name -> mobile.masks.v1.MaskDetails.Rectangle
	0, // 2: mobile.masks.v1.MasksData.GetProductionList:input_type -> mobile.masks.v1.ListRequest
	0, // 3: mobile.masks.v1.MasksData.GetStageList:input_type -> mobile.masks.v1.ListRequest
	0, // 4: mobile.masks.v1.MasksData.GetVersionList:input_type -> mobile.masks.v1.ListRequest
	1, // 5: mobile.masks.v1.MasksData.GetProductionList:output_type -> mobile.masks.v1.ListResponse
	1, // 6: mobile.masks.v1.MasksData.GetStageList:output_type -> mobile.masks.v1.ListResponse
	1, // 7: mobile.masks.v1.MasksData.GetVersionList:output_type -> mobile.masks.v1.ListResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_masks_v1_masksdata_service_proto_init() }
func file_masks_v1_masksdata_service_proto_init() {
	if File_masks_v1_masksdata_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_masks_v1_masksdata_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_masks_v1_masksdata_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_masks_v1_masksdata_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaskDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_masks_v1_masksdata_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaskDetails_Rectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_masks_v1_masksdata_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_masks_v1_masksdata_service_proto_goTypes,
		DependencyIndexes: file_masks_v1_masksdata_service_proto_depIdxs,
		MessageInfos:      file_masks_v1_masksdata_service_proto_msgTypes,
	}.Build()
	File_masks_v1_masksdata_service_proto = out.File
	file_masks_v1_masksdata_service_proto_rawDesc = nil
	file_masks_v1_masksdata_service_proto_goTypes = nil
	file_masks_v1_masksdata_service_proto_depIdxs = nil
}
