// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: chats/v2/chat_settings_service.proto

package chats

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v21 "github.com/sokkit-io/xiphias-model-common/generated/go/chats/v2"
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MuteChatResponse_Result int32

const (
	// The request was successfully processed.
	MuteChatResponse_OK MuteChatResponse_Result = 0
)

// Enum value maps for MuteChatResponse_Result.
var (
	MuteChatResponse_Result_name = map[int32]string{
		0: "OK",
	}
	MuteChatResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x MuteChatResponse_Result) Enum() *MuteChatResponse_Result {
	p := new(MuteChatResponse_Result)
	*p = x
	return p
}

func (x MuteChatResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MuteChatResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_chats_v2_chat_settings_service_proto_enumTypes[0].Descriptor()
}

func (MuteChatResponse_Result) Type() protoreflect.EnumType {
	return &file_chats_v2_chat_settings_service_proto_enumTypes[0]
}

func (x MuteChatResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MuteChatResponse_Result.Descriptor instead.
func (MuteChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{1, 0}
}

type UnmuteChatResponse_Result int32

const (
	// The request was successfully processed.
	UnmuteChatResponse_OK UnmuteChatResponse_Result = 0
)

// Enum value maps for UnmuteChatResponse_Result.
var (
	UnmuteChatResponse_Result_name = map[int32]string{
		0: "OK",
	}
	UnmuteChatResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x UnmuteChatResponse_Result) Enum() *UnmuteChatResponse_Result {
	p := new(UnmuteChatResponse_Result)
	*p = x
	return p
}

func (x UnmuteChatResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnmuteChatResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_chats_v2_chat_settings_service_proto_enumTypes[1].Descriptor()
}

func (UnmuteChatResponse_Result) Type() protoreflect.EnumType {
	return &file_chats_v2_chat_settings_service_proto_enumTypes[1]
}

func (x UnmuteChatResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnmuteChatResponse_Result.Descriptor instead.
func (UnmuteChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{3, 0}
}

type SetChatCategoryResponse_Result int32

const (
	// The request was successfully processed.
	SetChatCategoryResponse_OK SetChatCategoryResponse_Result = 0
)

// Enum value maps for SetChatCategoryResponse_Result.
var (
	SetChatCategoryResponse_Result_name = map[int32]string{
		0: "OK",
	}
	SetChatCategoryResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x SetChatCategoryResponse_Result) Enum() *SetChatCategoryResponse_Result {
	p := new(SetChatCategoryResponse_Result)
	*p = x
	return p
}

func (x SetChatCategoryResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetChatCategoryResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_chats_v2_chat_settings_service_proto_enumTypes[2].Descriptor()
}

func (SetChatCategoryResponse_Result) Type() protoreflect.EnumType {
	return &file_chats_v2_chat_settings_service_proto_enumTypes[2]
}

func (x SetChatCategoryResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetChatCategoryResponse_Result.Descriptor instead.
func (SetChatCategoryResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{5, 0}
}

type SetChatThemeResponse_Result int32

const (
	// Set/unset the theme was successful.
	SetChatThemeResponse_OK SetChatThemeResponse_Result = 0
	// Acting user does not have the authority to set/unset a theme. This is only applicable in groups.
	// User must be either admin or super admin in group to perform this action when theme is locked.
	SetChatThemeResponse_NOT_PERMITTED SetChatThemeResponse_Result = 1
)

// Enum value maps for SetChatThemeResponse_Result.
var (
	SetChatThemeResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_PERMITTED",
	}
	SetChatThemeResponse_Result_value = map[string]int32{
		"OK":            0,
		"NOT_PERMITTED": 1,
	}
)

func (x SetChatThemeResponse_Result) Enum() *SetChatThemeResponse_Result {
	p := new(SetChatThemeResponse_Result)
	*p = x
	return p
}

func (x SetChatThemeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetChatThemeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_chats_v2_chat_settings_service_proto_enumTypes[3].Descriptor()
}

func (SetChatThemeResponse_Result) Type() protoreflect.EnumType {
	return &file_chats_v2_chat_settings_service_proto_enumTypes[3]
}

func (x SetChatThemeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetChatThemeResponse_Result.Descriptor instead.
func (SetChatThemeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{7, 0}
}

type MuteChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chat which is to be muted
	// If the caller is not a member of this chat, a gRPC-level INVALID_ARGUMENT will be generated.
	Id *v2.ChatId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional time in the future after which the chat will automatically un-mute.
	// Note that specifying a time in the past will result in a gRPC-level INVALID_ARGUMENT error
	MuteExpiry *timestamp.Timestamp `protobuf:"bytes,2,opt,name=mute_expiry,json=muteExpiry,proto3" json:"mute_expiry,omitempty"`
}

func (x *MuteChatRequest) Reset() {
	*x = MuteChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteChatRequest) ProtoMessage() {}

func (x *MuteChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteChatRequest.ProtoReflect.Descriptor instead.
func (*MuteChatRequest) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{0}
}

func (x *MuteChatRequest) GetId() *v2.ChatId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MuteChatRequest) GetMuteExpiry() *timestamp.Timestamp {
	if x != nil {
		return x.MuteExpiry
	}
	return nil
}

type MuteChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result MuteChatResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.chats.v2.MuteChatResponse_Result" json:"result,omitempty"`
}

func (x *MuteChatResponse) Reset() {
	*x = MuteChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteChatResponse) ProtoMessage() {}

func (x *MuteChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteChatResponse.ProtoReflect.Descriptor instead.
func (*MuteChatResponse) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{1}
}

func (x *MuteChatResponse) GetResult() MuteChatResponse_Result {
	if x != nil {
		return x.Result
	}
	return MuteChatResponse_OK
}

type UnmuteChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v2.ChatId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnmuteChatRequest) Reset() {
	*x = UnmuteChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteChatRequest) ProtoMessage() {}

func (x *UnmuteChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteChatRequest.ProtoReflect.Descriptor instead.
func (*UnmuteChatRequest) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{2}
}

func (x *UnmuteChatRequest) GetId() *v2.ChatId {
	if x != nil {
		return x.Id
	}
	return nil
}

type UnmuteChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UnmuteChatResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.chats.v2.UnmuteChatResponse_Result" json:"result,omitempty"`
}

func (x *UnmuteChatResponse) Reset() {
	*x = UnmuteChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteChatResponse) ProtoMessage() {}

func (x *UnmuteChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteChatResponse.ProtoReflect.Descriptor instead.
func (*UnmuteChatResponse) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{3}
}

func (x *UnmuteChatResponse) GetResult() UnmuteChatResponse_Result {
	if x != nil {
		return x.Result
	}
	return UnmuteChatResponse_OK
}

type SetChatCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chat whose category is to be changed
	// If the caller is not a member of this chat, a gRPC-level INVALID_ARGUMENT will be generated.
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// Category the chat should be set to. For now (05-03-19) clients should never "downgrade" categories from FRIENDLY to NEW
	NewCategory *v21.ChatCategory `protobuf:"bytes,2,opt,name=new_category,json=newCategory,proto3" json:"new_category,omitempty"`
}

func (x *SetChatCategoryRequest) Reset() {
	*x = SetChatCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatCategoryRequest) ProtoMessage() {}

func (x *SetChatCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatCategoryRequest.ProtoReflect.Descriptor instead.
func (*SetChatCategoryRequest) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetChatCategoryRequest) GetChatId() *v2.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *SetChatCategoryRequest) GetNewCategory() *v21.ChatCategory {
	if x != nil {
		return x.NewCategory
	}
	return nil
}

type SetChatCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result SetChatCategoryResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.chats.v2.SetChatCategoryResponse_Result" json:"result,omitempty"`
}

func (x *SetChatCategoryResponse) Reset() {
	*x = SetChatCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatCategoryResponse) ProtoMessage() {}

func (x *SetChatCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatCategoryResponse.ProtoReflect.Descriptor instead.
func (*SetChatCategoryResponse) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{5}
}

func (x *SetChatCategoryResponse) GetResult() SetChatCategoryResponse_Result {
	if x != nil {
		return x.Result
	}
	return SetChatCategoryResponse_OK
}

type SetChatThemeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chat id (Either 1-to-1 or group)
	ChatId *v2.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// Chat theme id.
	// If id is not set, this will unset the theme for that chat
	ChatThemeId *v21.ChatThemeId `protobuf:"bytes,2,opt,name=chat_theme_id,json=chatThemeId,proto3" json:"chat_theme_id,omitempty"`
}

func (x *SetChatThemeRequest) Reset() {
	*x = SetChatThemeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatThemeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatThemeRequest) ProtoMessage() {}

func (x *SetChatThemeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatThemeRequest.ProtoReflect.Descriptor instead.
func (*SetChatThemeRequest) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{6}
}

func (x *SetChatThemeRequest) GetChatId() *v2.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *SetChatThemeRequest) GetChatThemeId() *v21.ChatThemeId {
	if x != nil {
		return x.ChatThemeId
	}
	return nil
}

type SetChatThemeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result SetChatThemeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.chats.v2.SetChatThemeResponse_Result" json:"result,omitempty"`
}

func (x *SetChatThemeResponse) Reset() {
	*x = SetChatThemeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chats_v2_chat_settings_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatThemeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatThemeResponse) ProtoMessage() {}

func (x *SetChatThemeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chats_v2_chat_settings_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatThemeResponse.ProtoReflect.Descriptor instead.
func (*SetChatThemeResponse) Descriptor() ([]byte, []int) {
	return file_chats_v2_chat_settings_service_proto_rawDescGZIP(), []int{7}
}

func (x *SetChatThemeResponse) GetResult() SetChatThemeResponse_Result {
	if x != nil {
		return x.Result
	}
	return SetChatThemeResponse_OK
}

var File_chats_v2_chat_settings_service_proto protoreflect.FileDescriptor

var file_chats_v2_chat_settings_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x81, 0x01, 0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x43, 0x0a, 0x0b, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x00, 0x52, 0x0a, 0x6d, 0x75, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x22, 0x66, 0x0a, 0x10, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x3e, 0x0a, 0x11,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x12,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x06, 0xca, 0x9d,
	0x25, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x74, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x01, 0x32, 0x81, 0x03, 0x0a, 0x0c, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x51, 0x0a, 0x08, 0x4d, 0x75,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a,
	0x0a, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x24,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x6e, 0x0a,
	0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x73, 0x2e, 0x76, 0x32, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68,
	0x69, 0x61, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x2f, 0x76, 0x32, 0x3b, 0x63, 0x68, 0x61, 0x74, 0x73, 0xa2, 0x02, 0x10, 0x4b, 0x50, 0x42,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x73, 0x56, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chats_v2_chat_settings_service_proto_rawDescOnce sync.Once
	file_chats_v2_chat_settings_service_proto_rawDescData = file_chats_v2_chat_settings_service_proto_rawDesc
)

func file_chats_v2_chat_settings_service_proto_rawDescGZIP() []byte {
	file_chats_v2_chat_settings_service_proto_rawDescOnce.Do(func() {
		file_chats_v2_chat_settings_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_chats_v2_chat_settings_service_proto_rawDescData)
	})
	return file_chats_v2_chat_settings_service_proto_rawDescData
}

var file_chats_v2_chat_settings_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_chats_v2_chat_settings_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chats_v2_chat_settings_service_proto_goTypes = []interface{}{
	(MuteChatResponse_Result)(0),        // 0: mobile.chats.v2.MuteChatResponse.Result
	(UnmuteChatResponse_Result)(0),      // 1: mobile.chats.v2.UnmuteChatResponse.Result
	(SetChatCategoryResponse_Result)(0), // 2: mobile.chats.v2.SetChatCategoryResponse.Result
	(SetChatThemeResponse_Result)(0),    // 3: mobile.chats.v2.SetChatThemeResponse.Result
	(*MuteChatRequest)(nil),             // 4: mobile.chats.v2.MuteChatRequest
	(*MuteChatResponse)(nil),            // 5: mobile.chats.v2.MuteChatResponse
	(*UnmuteChatRequest)(nil),           // 6: mobile.chats.v2.UnmuteChatRequest
	(*UnmuteChatResponse)(nil),          // 7: mobile.chats.v2.UnmuteChatResponse
	(*SetChatCategoryRequest)(nil),      // 8: mobile.chats.v2.SetChatCategoryRequest
	(*SetChatCategoryResponse)(nil),     // 9: mobile.chats.v2.SetChatCategoryResponse
	(*SetChatThemeRequest)(nil),         // 10: mobile.chats.v2.SetChatThemeRequest
	(*SetChatThemeResponse)(nil),        // 11: mobile.chats.v2.SetChatThemeResponse
	(*v2.ChatId)(nil),                   // 12: common.v2.ChatId
	(*timestamp.Timestamp)(nil),         // 13: google.protobuf.Timestamp
	(*v21.ChatCategory)(nil),            // 14: common.chats.v2.ChatCategory
	(*v21.ChatThemeId)(nil),             // 15: common.chats.v2.ChatThemeId
}
var file_chats_v2_chat_settings_service_proto_depIdxs = []int32{
	12, // 0: mobile.chats.v2.MuteChatRequest.id:type_name -> common.v2.ChatId
	13, // 1: mobile.chats.v2.MuteChatRequest.mute_expiry:type_name -> google.protobuf.Timestamp
	0,  // 2: mobile.chats.v2.MuteChatResponse.result:type_name -> mobile.chats.v2.MuteChatResponse.Result
	12, // 3: mobile.chats.v2.UnmuteChatRequest.id:type_name -> common.v2.ChatId
	1,  // 4: mobile.chats.v2.UnmuteChatResponse.result:type_name -> mobile.chats.v2.UnmuteChatResponse.Result
	12, // 5: mobile.chats.v2.SetChatCategoryRequest.chat_id:type_name -> common.v2.ChatId
	14, // 6: mobile.chats.v2.SetChatCategoryRequest.new_category:type_name -> common.chats.v2.ChatCategory
	2,  // 7: mobile.chats.v2.SetChatCategoryResponse.result:type_name -> mobile.chats.v2.SetChatCategoryResponse.Result
	12, // 8: mobile.chats.v2.SetChatThemeRequest.chat_id:type_name -> common.v2.ChatId
	15, // 9: mobile.chats.v2.SetChatThemeRequest.chat_theme_id:type_name -> common.chats.v2.ChatThemeId
	3,  // 10: mobile.chats.v2.SetChatThemeResponse.result:type_name -> mobile.chats.v2.SetChatThemeResponse.Result
	4,  // 11: mobile.chats.v2.ChatSettings.MuteChat:input_type -> mobile.chats.v2.MuteChatRequest
	6,  // 12: mobile.chats.v2.ChatSettings.UnmuteChat:input_type -> mobile.chats.v2.UnmuteChatRequest
	8,  // 13: mobile.chats.v2.ChatSettings.SetChatCategory:input_type -> mobile.chats.v2.SetChatCategoryRequest
	10, // 14: mobile.chats.v2.ChatSettings.SetChatTheme:input_type -> mobile.chats.v2.SetChatThemeRequest
	5,  // 15: mobile.chats.v2.ChatSettings.MuteChat:output_type -> mobile.chats.v2.MuteChatResponse
	7,  // 16: mobile.chats.v2.ChatSettings.UnmuteChat:output_type -> mobile.chats.v2.UnmuteChatResponse
	9,  // 17: mobile.chats.v2.ChatSettings.SetChatCategory:output_type -> mobile.chats.v2.SetChatCategoryResponse
	11, // 18: mobile.chats.v2.ChatSettings.SetChatTheme:output_type -> mobile.chats.v2.SetChatThemeResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_chats_v2_chat_settings_service_proto_init() }
func file_chats_v2_chat_settings_service_proto_init() {
	if File_chats_v2_chat_settings_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chats_v2_chat_settings_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnmuteChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatThemeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chats_v2_chat_settings_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatThemeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chats_v2_chat_settings_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chats_v2_chat_settings_service_proto_goTypes,
		DependencyIndexes: file_chats_v2_chat_settings_service_proto_depIdxs,
		EnumInfos:         file_chats_v2_chat_settings_service_proto_enumTypes,
		MessageInfos:      file_chats_v2_chat_settings_service_proto_msgTypes,
	}.Build()
	File_chats_v2_chat_settings_service_proto = out.File
	file_chats_v2_chat_settings_service_proto_rawDesc = nil
	file_chats_v2_chat_settings_service_proto_goTypes = nil
	file_chats_v2_chat_settings_service_proto_depIdxs = nil
}
