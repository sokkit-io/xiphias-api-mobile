// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: matching/v2/anon_matching_service.proto

package matching

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v21 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	v22 "github.com/sokkit-io/xiphias-model-common/generated/go/kin/payment/v2"
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/matching/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindChatPartnerResponse_Result int32

const (
	// Chat partner immediately found and will be returned with this response
	FindChatPartnerResponse_PARTNER_FOUND FindChatPartnerResponse_Result = 0
	// Chat partner not found (yet), user has been put in queue
	FindChatPartnerResponse_IN_QUEUE FindChatPartnerResponse_Result = 1
	// The rejected response is a general rejection status that encompasses any rejections not covered by
	// other REJECTED_* result codes, such as too many active chat sessions,
	// or Bouncer rejections (spam analysis)
	// If the user is in the queue already his requested is updated but not rejected
	FindChatPartnerResponse_REJECTED FindChatPartnerResponse_Result = 2
	// User has exceeded their daily limit of sessions
	FindChatPartnerResponse_REJECTED_NO_REMAINING_SESSIONS FindChatPartnerResponse_Result = 3
	// User is temporarily banned for bad behavior
	FindChatPartnerResponse_REJECTED_TEMPORARILY_BANNED FindChatPartnerResponse_Result = 4
)

// Enum value maps for FindChatPartnerResponse_Result.
var (
	FindChatPartnerResponse_Result_name = map[int32]string{
		0: "PARTNER_FOUND",
		1: "IN_QUEUE",
		2: "REJECTED",
		3: "REJECTED_NO_REMAINING_SESSIONS",
		4: "REJECTED_TEMPORARILY_BANNED",
	}
	FindChatPartnerResponse_Result_value = map[string]int32{
		"PARTNER_FOUND":                  0,
		"IN_QUEUE":                       1,
		"REJECTED":                       2,
		"REJECTED_NO_REMAINING_SESSIONS": 3,
		"REJECTED_TEMPORARILY_BANNED":    4,
	}
)

func (x FindChatPartnerResponse_Result) Enum() *FindChatPartnerResponse_Result {
	p := new(FindChatPartnerResponse_Result)
	*p = x
	return p
}

func (x FindChatPartnerResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FindChatPartnerResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[0].Descriptor()
}

func (FindChatPartnerResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[0]
}

func (x FindChatPartnerResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FindChatPartnerResponse_Result.Descriptor instead.
func (FindChatPartnerResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{1, 0}
}

type CancelFindChatPartnerResponse_Result int32

const (
	// Find chat session request successfully cancelled
	CancelFindChatPartnerResponse_OK CancelFindChatPartnerResponse_Result = 0
	// Chat session has already been created, the session will not be cancelled,
	// details will be included in the same way that clients
	// waiting after a FindChatSessionResponse.Result.IN_QUEUE receive them
	CancelFindChatPartnerResponse_SESSION_ALREADY_CREATED CancelFindChatPartnerResponse_Result = 1
)

// Enum value maps for CancelFindChatPartnerResponse_Result.
var (
	CancelFindChatPartnerResponse_Result_name = map[int32]string{
		0: "OK",
		1: "SESSION_ALREADY_CREATED",
	}
	CancelFindChatPartnerResponse_Result_value = map[string]int32{
		"OK":                      0,
		"SESSION_ALREADY_CREATED": 1,
	}
)

func (x CancelFindChatPartnerResponse_Result) Enum() *CancelFindChatPartnerResponse_Result {
	p := new(CancelFindChatPartnerResponse_Result)
	*p = x
	return p
}

func (x CancelFindChatPartnerResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelFindChatPartnerResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[1].Descriptor()
}

func (CancelFindChatPartnerResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[1]
}

func (x CancelFindChatPartnerResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelFindChatPartnerResponse_Result.Descriptor instead.
func (CancelFindChatPartnerResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{3, 0}
}

type RateChatResponse_Result int32

const (
	// Rating logged
	RateChatResponse_OK RateChatResponse_Result = 0
	// Chat session not found or expired.  Clients should not retry this.
	RateChatResponse_NOT_FOUND RateChatResponse_Result = 1
)

// Enum value maps for RateChatResponse_Result.
var (
	RateChatResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	RateChatResponse_Result_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x RateChatResponse_Result) Enum() *RateChatResponse_Result {
	p := new(RateChatResponse_Result)
	*p = x
	return p
}

func (x RateChatResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateChatResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[2].Descriptor()
}

func (RateChatResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[2]
}

func (x RateChatResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateChatResponse_Result.Descriptor instead.
func (RateChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{5, 0}
}

type EndChatResponse_Result int32

const (
	EndChatResponse_OK EndChatResponse_Result = 0
)

// Enum value maps for EndChatResponse_Result.
var (
	EndChatResponse_Result_name = map[int32]string{
		0: "OK",
	}
	EndChatResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x EndChatResponse_Result) Enum() *EndChatResponse_Result {
	p := new(EndChatResponse_Result)
	*p = x
	return p
}

func (x EndChatResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndChatResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[3].Descriptor()
}

func (EndChatResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[3]
}

func (x EndChatResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndChatResponse_Result.Descriptor instead.
func (EndChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{7, 0}
}

type DeleteChatResponse_Result int32

const (
	DeleteChatResponse_OK DeleteChatResponse_Result = 0
)

// Enum value maps for DeleteChatResponse_Result.
var (
	DeleteChatResponse_Result_name = map[int32]string{
		0: "OK",
	}
	DeleteChatResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x DeleteChatResponse_Result) Enum() *DeleteChatResponse_Result {
	p := new(DeleteChatResponse_Result)
	*p = x
	return p
}

func (x DeleteChatResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteChatResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[4].Descriptor()
}

func (DeleteChatResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[4]
}

func (x DeleteChatResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteChatResponse_Result.Descriptor instead.
func (DeleteChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{9, 0}
}

type GetRemainingAnonChatsResponse_Result int32

const (
	GetRemainingAnonChatsResponse_OK GetRemainingAnonChatsResponse_Result = 0
)

// Enum value maps for GetRemainingAnonChatsResponse_Result.
var (
	GetRemainingAnonChatsResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetRemainingAnonChatsResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetRemainingAnonChatsResponse_Result) Enum() *GetRemainingAnonChatsResponse_Result {
	p := new(GetRemainingAnonChatsResponse_Result)
	*p = x
	return p
}

func (x GetRemainingAnonChatsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetRemainingAnonChatsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[5].Descriptor()
}

func (GetRemainingAnonChatsResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[5]
}

func (x GetRemainingAnonChatsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetRemainingAnonChatsResponse_Result.Descriptor instead.
func (GetRemainingAnonChatsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{11, 0}
}

type InitiateFriendingResponse_Result int32

const (
	// Friending has been initiated successfully
	InitiateFriendingResponse_OK InitiateFriendingResponse_Result = 0
)

// Enum value maps for InitiateFriendingResponse_Result.
var (
	InitiateFriendingResponse_Result_name = map[int32]string{
		0: "OK",
	}
	InitiateFriendingResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x InitiateFriendingResponse_Result) Enum() *InitiateFriendingResponse_Result {
	p := new(InitiateFriendingResponse_Result)
	*p = x
	return p
}

func (x InitiateFriendingResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitiateFriendingResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[6].Descriptor()
}

func (InitiateFriendingResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[6]
}

func (x InitiateFriendingResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitiateFriendingResponse_Result.Descriptor instead.
func (InitiateFriendingResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{13, 0}
}

type GetInterestListResponse_Result int32

const (
	GetInterestListResponse_OK GetInterestListResponse_Result = 0
)

// Enum value maps for GetInterestListResponse_Result.
var (
	GetInterestListResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetInterestListResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetInterestListResponse_Result) Enum() *GetInterestListResponse_Result {
	p := new(GetInterestListResponse_Result)
	*p = x
	return p
}

func (x GetInterestListResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInterestListResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[7].Descriptor()
}

func (GetInterestListResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[7]
}

func (x GetInterestListResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInterestListResponse_Result.Descriptor instead.
func (GetInterestListResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{17, 0}
}

type GetUserConfigResponse_Result int32

const (
	GetUserConfigResponse_OK GetUserConfigResponse_Result = 0
)

// Enum value maps for GetUserConfigResponse_Result.
var (
	GetUserConfigResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetUserConfigResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetUserConfigResponse_Result) Enum() *GetUserConfigResponse_Result {
	p := new(GetUserConfigResponse_Result)
	*p = x
	return p
}

func (x GetUserConfigResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUserConfigResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[8].Descriptor()
}

func (GetUserConfigResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[8]
}

func (x GetUserConfigResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUserConfigResponse_Result.Descriptor instead.
func (GetUserConfigResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{19, 0}
}

type SetUserConfigResponse_Result int32

const (
	SetUserConfigResponse_OK SetUserConfigResponse_Result = 0
)

// Enum value maps for SetUserConfigResponse_Result.
var (
	SetUserConfigResponse_Result_name = map[int32]string{
		0: "OK",
	}
	SetUserConfigResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x SetUserConfigResponse_Result) Enum() *SetUserConfigResponse_Result {
	p := new(SetUserConfigResponse_Result)
	*p = x
	return p
}

func (x SetUserConfigResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetUserConfigResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_matching_v2_anon_matching_service_proto_enumTypes[9].Descriptor()
}

func (SetUserConfigResponse_Result) Type() protoreflect.EnumType {
	return &file_matching_v2_anon_matching_service_proto_enumTypes[9]
}

func (x SetUserConfigResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetUserConfigResponse_Result.Descriptor instead.
func (SetUserConfigResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{21, 0}
}

// If the user already has an ongoing search in the queue, it will be updated
// by sending another FindChatPartnerRequest. It is considered normal behaviour and
// no exception or warning or special status code is returned
type FindChatPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If no interests are included in this request, this is considered a "quick chat",
	// and users will be matched with anyone.
	Interests []*v2.AnonMatchInterest `protobuf:"bytes,1,rep,name=interests,proto3" json:"interests,omitempty"`
	// Matching Variant defines the queue to search a partner.
	// If a value is not provided, the default queue will be used.
	// For certain whitelisted accounts (QA accounts), a different queue is used.
	// Providing a value for matching_variant will override any other default queue setting.
	MatchingVariant string `protobuf:"bytes,2,opt,name=matching_variant,json=matchingVariant,proto3" json:"matching_variant,omitempty"`
}

func (x *FindChatPartnerRequest) Reset() {
	*x = FindChatPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindChatPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindChatPartnerRequest) ProtoMessage() {}

func (x *FindChatPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindChatPartnerRequest.ProtoReflect.Descriptor instead.
func (*FindChatPartnerRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{0}
}

func (x *FindChatPartnerRequest) GetInterests() []*v2.AnonMatchInterest {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *FindChatPartnerRequest) GetMatchingVariant() string {
	if x != nil {
		return x.MatchingVariant
	}
	return ""
}

type FindChatPartnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result FindChatPartnerResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.FindChatPartnerResponse_Result" json:"result,omitempty"`
	// The optional id of the request, can be used to cancel this request if in queue
	// Will not be present unless result = (PARTNER_FOUND or IN_QUEUE)
	FindChatRequestId *v21.Uuid `protobuf:"bytes,2,opt,name=find_chat_request_id,json=findChatRequestId,proto3" json:"find_chat_request_id,omitempty"`
	// In case of a rejection, this is the (UTC) timestamp of when the user
	// will be allowed to return and request a new anon-chat.
	//
	// Will only be present if the rejection is for any reason that can expire
	// such as REJECTED_NO_REMAINING_SESSIONS or REJECTED_TEMPORARILY_BANNED
	RejectedExpiryTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=rejected_expiry_time,json=rejectedExpiryTime,proto3" json:"rejected_expiry_time,omitempty"`
}

func (x *FindChatPartnerResponse) Reset() {
	*x = FindChatPartnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindChatPartnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindChatPartnerResponse) ProtoMessage() {}

func (x *FindChatPartnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindChatPartnerResponse.ProtoReflect.Descriptor instead.
func (*FindChatPartnerResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{1}
}

func (x *FindChatPartnerResponse) GetResult() FindChatPartnerResponse_Result {
	if x != nil {
		return x.Result
	}
	return FindChatPartnerResponse_PARTNER_FOUND
}

func (x *FindChatPartnerResponse) GetFindChatRequestId() *v21.Uuid {
	if x != nil {
		return x.FindChatRequestId
	}
	return nil
}

func (x *FindChatPartnerResponse) GetRejectedExpiryTime() *timestamp.Timestamp {
	if x != nil {
		return x.RejectedExpiryTime
	}
	return nil
}

type CancelFindChatPartnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id that was returned by the FindChatPartnerResponse should be used here to cancel the request
	FindChatRequestId *v21.Uuid `protobuf:"bytes,1,opt,name=find_chat_request_id,json=findChatRequestId,proto3" json:"find_chat_request_id,omitempty"`
}

func (x *CancelFindChatPartnerRequest) Reset() {
	*x = CancelFindChatPartnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFindChatPartnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFindChatPartnerRequest) ProtoMessage() {}

func (x *CancelFindChatPartnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFindChatPartnerRequest.ProtoReflect.Descriptor instead.
func (*CancelFindChatPartnerRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{2}
}

func (x *CancelFindChatPartnerRequest) GetFindChatRequestId() *v21.Uuid {
	if x != nil {
		return x.FindChatRequestId
	}
	return nil
}

type CancelFindChatPartnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result CancelFindChatPartnerResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.CancelFindChatPartnerResponse_Result" json:"result,omitempty"`
}

func (x *CancelFindChatPartnerResponse) Reset() {
	*x = CancelFindChatPartnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelFindChatPartnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelFindChatPartnerResponse) ProtoMessage() {}

func (x *CancelFindChatPartnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelFindChatPartnerResponse.ProtoReflect.Descriptor instead.
func (*CancelFindChatPartnerResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{3}
}

func (x *CancelFindChatPartnerResponse) GetResult() CancelFindChatPartnerResponse_Result {
	if x != nil {
		return x.Result
	}
	return CancelFindChatPartnerResponse_OK
}

type RateChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId *v21.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// How the user has rated this chat
	ChatRating *v2.ChatRating `protobuf:"bytes,2,opt,name=chat_rating,json=chatRating,proto3" json:"chat_rating,omitempty"`
}

func (x *RateChatRequest) Reset() {
	*x = RateChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateChatRequest) ProtoMessage() {}

func (x *RateChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateChatRequest.ProtoReflect.Descriptor instead.
func (*RateChatRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{4}
}

func (x *RateChatRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *RateChatRequest) GetChatRating() *v2.ChatRating {
	if x != nil {
		return x.ChatRating
	}
	return nil
}

type RateChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result RateChatResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.RateChatResponse_Result" json:"result,omitempty"`
}

func (x *RateChatResponse) Reset() {
	*x = RateChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateChatResponse) ProtoMessage() {}

func (x *RateChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateChatResponse.ProtoReflect.Descriptor instead.
func (*RateChatResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{5}
}

func (x *RateChatResponse) GetResult() RateChatResponse_Result {
	if x != nil {
		return x.Result
	}
	return RateChatResponse_OK
}

type EndChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId *v21.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// If true, the user is choosing to skip the chat before they have started chatting,
	// their chat is counted towards their daily chat total, but the other participant that
	// is being skipped, won't be counted.
	// This is only available for iOS expanded profile sessions
	SkipChat bool `protobuf:"varint,2,opt,name=skip_chat,json=skipChat,proto3" json:"skip_chat,omitempty"`
}

func (x *EndChatRequest) Reset() {
	*x = EndChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndChatRequest) ProtoMessage() {}

func (x *EndChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndChatRequest.ProtoReflect.Descriptor instead.
func (*EndChatRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{6}
}

func (x *EndChatRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *EndChatRequest) GetSkipChat() bool {
	if x != nil {
		return x.SkipChat
	}
	return false
}

type EndChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result EndChatResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.EndChatResponse_Result" json:"result,omitempty"`
}

func (x *EndChatResponse) Reset() {
	*x = EndChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndChatResponse) ProtoMessage() {}

func (x *EndChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndChatResponse.ProtoReflect.Descriptor instead.
func (*EndChatResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{7}
}

func (x *EndChatResponse) GetResult() EndChatResponse_Result {
	if x != nil {
		return x.Result
	}
	return EndChatResponse_OK
}

type DeleteChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId *v21.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *DeleteChatRequest) Reset() {
	*x = DeleteChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatRequest) ProtoMessage() {}

func (x *DeleteChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteChatRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

type DeleteChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result DeleteChatResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.DeleteChatResponse_Result" json:"result,omitempty"`
}

func (x *DeleteChatResponse) Reset() {
	*x = DeleteChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatResponse) ProtoMessage() {}

func (x *DeleteChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteChatResponse) GetResult() DeleteChatResponse_Result {
	if x != nil {
		return x.Result
	}
	return DeleteChatResponse_OK
}

type GetRemainingAnonChatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRemainingAnonChatsRequest) Reset() {
	*x = GetRemainingAnonChatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemainingAnonChatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemainingAnonChatsRequest) ProtoMessage() {}

func (x *GetRemainingAnonChatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemainingAnonChatsRequest.ProtoReflect.Descriptor instead.
func (*GetRemainingAnonChatsRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{10}
}

type GetRemainingAnonChatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetRemainingAnonChatsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.GetRemainingAnonChatsResponse_Result" json:"result,omitempty"`
	// The number of chats remaining in a (configurable) time period.
	RemainingChats int32 `protobuf:"varint,2,opt,name=remaining_chats,json=remainingChats,proto3" json:"remaining_chats,omitempty"`
}

func (x *GetRemainingAnonChatsResponse) Reset() {
	*x = GetRemainingAnonChatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemainingAnonChatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemainingAnonChatsResponse) ProtoMessage() {}

func (x *GetRemainingAnonChatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemainingAnonChatsResponse.ProtoReflect.Descriptor instead.
func (*GetRemainingAnonChatsResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetRemainingAnonChatsResponse) GetResult() GetRemainingAnonChatsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetRemainingAnonChatsResponse_OK
}

func (x *GetRemainingAnonChatsResponse) GetRemainingChats() int32 {
	if x != nil {
		return x.RemainingChats
	}
	return 0
}

// The caller's account will be in the request, and must be a participant in the anon chat, else error
type InitiateFriendingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId *v21.ChatId `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *InitiateFriendingRequest) Reset() {
	*x = InitiateFriendingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateFriendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateFriendingRequest) ProtoMessage() {}

func (x *InitiateFriendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateFriendingRequest.ProtoReflect.Descriptor instead.
func (*InitiateFriendingRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{12}
}

func (x *InitiateFriendingRequest) GetChatId() *v21.ChatId {
	if x != nil {
		return x.ChatId
	}
	return nil
}

type InitiateFriendingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result InitiateFriendingResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.InitiateFriendingResponse_Result" json:"result,omitempty"`
}

func (x *InitiateFriendingResponse) Reset() {
	*x = InitiateFriendingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateFriendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateFriendingResponse) ProtoMessage() {}

func (x *InitiateFriendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateFriendingResponse.ProtoReflect.Descriptor instead.
func (*InitiateFriendingResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{13}
}

func (x *InitiateFriendingResponse) GetResult() InitiateFriendingResponse_Result {
	if x != nil {
		return x.Result
	}
	return InitiateFriendingResponse_OK
}

type GetUserChallengesStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserChallengesStatsRequest) Reset() {
	*x = GetUserChallengesStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChallengesStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChallengesStatsRequest) ProtoMessage() {}

func (x *GetUserChallengesStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChallengesStatsRequest.ProtoReflect.Descriptor instead.
func (*GetUserChallengesStatsRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{14}
}

type GetUserChallengesStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of daily challenges successfully completed by the user for the current week
	CompletedDailyChallenges int32 `protobuf:"varint,1,opt,name=completed_daily_challenges,json=completedDailyChallenges,proto3" json:"completed_daily_challenges,omitempty"`
	// The total number of completed daily challenges that the user requires to finish the weekly challenge
	RequiredDailyChallenges int32 `protobuf:"varint,2,opt,name=required_daily_challenges,json=requiredDailyChallenges,proto3" json:"required_daily_challenges,omitempty"`
	// The amount of Kin a user should earn by completing a daily chat challenge
	DailyEarnKinAmount *v22.KinAmount `protobuf:"bytes,3,opt,name=daily_earn_kin_amount,json=dailyEarnKinAmount,proto3" json:"daily_earn_kin_amount,omitempty"`
}

func (x *GetUserChallengesStatsResponse) Reset() {
	*x = GetUserChallengesStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChallengesStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChallengesStatsResponse) ProtoMessage() {}

func (x *GetUserChallengesStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChallengesStatsResponse.ProtoReflect.Descriptor instead.
func (*GetUserChallengesStatsResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserChallengesStatsResponse) GetCompletedDailyChallenges() int32 {
	if x != nil {
		return x.CompletedDailyChallenges
	}
	return 0
}

func (x *GetUserChallengesStatsResponse) GetRequiredDailyChallenges() int32 {
	if x != nil {
		return x.RequiredDailyChallenges
	}
	return 0
}

func (x *GetUserChallengesStatsResponse) GetDailyEarnKinAmount() *v22.KinAmount {
	if x != nil {
		return x.DailyEarnKinAmount
	}
	return nil
}

type GetInterestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInterestListRequest) Reset() {
	*x = GetInterestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestListRequest) ProtoMessage() {}

func (x *GetInterestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestListRequest.ProtoReflect.Descriptor instead.
func (*GetInterestListRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{16}
}

type GetInterestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetInterestListResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.GetInterestListResponse_Result" json:"result,omitempty"`
	// List of anonymous chat interests that user will use to match by interest
	Interests []*v2.AnonMatchInterest `protobuf:"bytes,2,rep,name=interests,proto3" json:"interests,omitempty"`
}

func (x *GetInterestListResponse) Reset() {
	*x = GetInterestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestListResponse) ProtoMessage() {}

func (x *GetInterestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestListResponse.ProtoReflect.Descriptor instead.
func (*GetInterestListResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetInterestListResponse) GetResult() GetInterestListResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetInterestListResponse_OK
}

func (x *GetInterestListResponse) GetInterests() []*v2.AnonMatchInterest {
	if x != nil {
		return x.Interests
	}
	return nil
}

type GetUserConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserConfigRequest) Reset() {
	*x = GetUserConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigRequest) ProtoMessage() {}

func (x *GetUserConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigRequest.ProtoReflect.Descriptor instead.
func (*GetUserConfigRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{18}
}

type GetUserConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                     GetUserConfigResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.GetUserConfigResponse_Result" json:"result,omitempty"`
	WelcomeTutorialCompleted   *WelcomeTutorialCompleted    `protobuf:"bytes,2,opt,name=welcome_tutorial_completed,json=welcomeTutorialCompleted,proto3" json:"welcome_tutorial_completed,omitempty"`
	AddFriendTutorialCompleted *AddFriendTutorialCompleted  `protobuf:"bytes,3,opt,name=add_friend_tutorial_completed,json=addFriendTutorialCompleted,proto3" json:"add_friend_tutorial_completed,omitempty"`
	KinRewardTutorialCompleted *KinRewardTutorialCompleted  `protobuf:"bytes,4,opt,name=kin_reward_tutorial_completed,json=kinRewardTutorialCompleted,proto3" json:"kin_reward_tutorial_completed,omitempty"`
	ProfileToolTipShown        *ProfileToolTipShown         `protobuf:"bytes,5,opt,name=profile_tool_tip_shown,json=profileToolTipShown,proto3" json:"profile_tool_tip_shown,omitempty"`
	ProfileAvatarDrawerShown   *ProfileAvatarDrawerShown    `protobuf:"bytes,6,opt,name=profile_avatar_drawer_shown,json=profileAvatarDrawerShown,proto3" json:"profile_avatar_drawer_shown,omitempty"`
}

func (x *GetUserConfigResponse) Reset() {
	*x = GetUserConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigResponse) ProtoMessage() {}

func (x *GetUserConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigResponse.ProtoReflect.Descriptor instead.
func (*GetUserConfigResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserConfigResponse) GetResult() GetUserConfigResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetUserConfigResponse_OK
}

func (x *GetUserConfigResponse) GetWelcomeTutorialCompleted() *WelcomeTutorialCompleted {
	if x != nil {
		return x.WelcomeTutorialCompleted
	}
	return nil
}

func (x *GetUserConfigResponse) GetAddFriendTutorialCompleted() *AddFriendTutorialCompleted {
	if x != nil {
		return x.AddFriendTutorialCompleted
	}
	return nil
}

func (x *GetUserConfigResponse) GetKinRewardTutorialCompleted() *KinRewardTutorialCompleted {
	if x != nil {
		return x.KinRewardTutorialCompleted
	}
	return nil
}

func (x *GetUserConfigResponse) GetProfileToolTipShown() *ProfileToolTipShown {
	if x != nil {
		return x.ProfileToolTipShown
	}
	return nil
}

func (x *GetUserConfigResponse) GetProfileAvatarDrawerShown() *ProfileAvatarDrawerShown {
	if x != nil {
		return x.ProfileAvatarDrawerShown
	}
	return nil
}

type SetUserConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If provided, will set the value for WelcomeTutorialCompleted for the user
	WelcomeTutorialCompleted *WelcomeTutorialCompleted `protobuf:"bytes,1,opt,name=welcome_tutorial_completed,json=welcomeTutorialCompleted,proto3" json:"welcome_tutorial_completed,omitempty"`
	// If provided, will set the value for AddFriendTutorialCompleted for the user
	AddFriendTutorialCompleted *AddFriendTutorialCompleted `protobuf:"bytes,2,opt,name=add_friend_tutorial_completed,json=addFriendTutorialCompleted,proto3" json:"add_friend_tutorial_completed,omitempty"`
	// If provided, will set the value for KinRewardTutorialCompleted for the user
	KinRewardTutorialCompleted *KinRewardTutorialCompleted `protobuf:"bytes,3,opt,name=kin_reward_tutorial_completed,json=kinRewardTutorialCompleted,proto3" json:"kin_reward_tutorial_completed,omitempty"`
	// If provided, will set the value for ProfileToolTipShown for the user
	ProfileToolTipShown *ProfileToolTipShown `protobuf:"bytes,4,opt,name=profile_tool_tip_shown,json=profileToolTipShown,proto3" json:"profile_tool_tip_shown,omitempty"`
	// If provided, will set the value for ProfileAvatarDrawerShown for the user
	ProfileAvatarDrawerShown *ProfileAvatarDrawerShown `protobuf:"bytes,5,opt,name=profile_avatar_drawer_shown,json=profileAvatarDrawerShown,proto3" json:"profile_avatar_drawer_shown,omitempty"`
}

func (x *SetUserConfigRequest) Reset() {
	*x = SetUserConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConfigRequest) ProtoMessage() {}

func (x *SetUserConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConfigRequest.ProtoReflect.Descriptor instead.
func (*SetUserConfigRequest) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{20}
}

func (x *SetUserConfigRequest) GetWelcomeTutorialCompleted() *WelcomeTutorialCompleted {
	if x != nil {
		return x.WelcomeTutorialCompleted
	}
	return nil
}

func (x *SetUserConfigRequest) GetAddFriendTutorialCompleted() *AddFriendTutorialCompleted {
	if x != nil {
		return x.AddFriendTutorialCompleted
	}
	return nil
}

func (x *SetUserConfigRequest) GetKinRewardTutorialCompleted() *KinRewardTutorialCompleted {
	if x != nil {
		return x.KinRewardTutorialCompleted
	}
	return nil
}

func (x *SetUserConfigRequest) GetProfileToolTipShown() *ProfileToolTipShown {
	if x != nil {
		return x.ProfileToolTipShown
	}
	return nil
}

func (x *SetUserConfigRequest) GetProfileAvatarDrawerShown() *ProfileAvatarDrawerShown {
	if x != nil {
		return x.ProfileAvatarDrawerShown
	}
	return nil
}

type SetUserConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result SetUserConfigResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.matching.v2.SetUserConfigResponse_Result" json:"result,omitempty"`
}

func (x *SetUserConfigResponse) Reset() {
	*x = SetUserConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConfigResponse) ProtoMessage() {}

func (x *SetUserConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConfigResponse.ProtoReflect.Descriptor instead.
func (*SetUserConfigResponse) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{21}
}

func (x *SetUserConfigResponse) GetResult() SetUserConfigResponse_Result {
	if x != nil {
		return x.Result
	}
	return SetUserConfigResponse_OK
}

type WelcomeTutorialCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WelcomeTutorialCompleted) Reset() {
	*x = WelcomeTutorialCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WelcomeTutorialCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeTutorialCompleted) ProtoMessage() {}

func (x *WelcomeTutorialCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeTutorialCompleted.ProtoReflect.Descriptor instead.
func (*WelcomeTutorialCompleted) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{22}
}

func (x *WelcomeTutorialCompleted) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type AddFriendTutorialCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AddFriendTutorialCompleted) Reset() {
	*x = AddFriendTutorialCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendTutorialCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendTutorialCompleted) ProtoMessage() {}

func (x *AddFriendTutorialCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendTutorialCompleted.ProtoReflect.Descriptor instead.
func (*AddFriendTutorialCompleted) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{23}
}

func (x *AddFriendTutorialCompleted) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type KinRewardTutorialCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KinRewardTutorialCompleted) Reset() {
	*x = KinRewardTutorialCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KinRewardTutorialCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KinRewardTutorialCompleted) ProtoMessage() {}

func (x *KinRewardTutorialCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KinRewardTutorialCompleted.ProtoReflect.Descriptor instead.
func (*KinRewardTutorialCompleted) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{24}
}

func (x *KinRewardTutorialCompleted) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type ProfileToolTipShown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProfileToolTipShown) Reset() {
	*x = ProfileToolTipShown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileToolTipShown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileToolTipShown) ProtoMessage() {}

func (x *ProfileToolTipShown) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileToolTipShown.ProtoReflect.Descriptor instead.
func (*ProfileToolTipShown) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{25}
}

func (x *ProfileToolTipShown) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type ProfileAvatarDrawerShown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProfileAvatarDrawerShown) Reset() {
	*x = ProfileAvatarDrawerShown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matching_v2_anon_matching_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileAvatarDrawerShown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileAvatarDrawerShown) ProtoMessage() {}

func (x *ProfileAvatarDrawerShown) ProtoReflect() protoreflect.Message {
	mi := &file_matching_v2_anon_matching_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileAvatarDrawerShown.ProtoReflect.Descriptor instead.
func (*ProfileAvatarDrawerShown) Descriptor() ([]byte, []int) {
	return file_matching_v2_anon_matching_service_proto_rawDescGZIP(), []int{26}
}

func (x *ProfileAvatarDrawerShown) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

var File_matching_v2_anon_matching_service_proto protoreflect.FileDescriptor

var file_matching_v2_anon_matching_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x6e,
	0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x1a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x32, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6b, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x6f, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x07, 0xca,
	0x9d, 0x25, 0x03, 0x80, 0x01, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x32, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0x9d, 0x25,
	0x03, 0x20, 0xff, 0x01, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xf3, 0x02, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a,
	0x14, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x52, 0x11, 0x66, 0x69,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x4c, 0x0a, 0x14, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x52, 0x54, 0x4e,
	0x45, 0x52, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x49,
	0x4c, 0x59, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x22, 0x68, 0x0a, 0x1c, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x14, 0x66,
	0x69, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02,
	0x08, 0x01, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x47, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x78, 0x0a, 0x10, 0x52, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x22, 0x61, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08,
	0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b,
	0x69, 0x70, 0x43, 0x68, 0x61, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22,
	0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x4e, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x19, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x06, 0xca, 0x9d, 0x25,
	0x02, 0x08, 0x01, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x5b, 0x0a, 0x15, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x5f,
	0x6b, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6b, 0x69, 0x6e, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x12, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x45, 0x61, 0x72, 0x6e, 0x4b, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x4c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x07, 0xca, 0x9d, 0x25, 0x03,
	0x80, 0x01, 0x64, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22, 0x10,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x05, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x72, 0x0a, 0x1a,
	0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x06,
	0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x18, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54,
	0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x79, 0x0a, 0x1d, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52,
	0x1a, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x79, 0x0a, 0x1d, 0x6b,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x1a, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x42,
	0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x73, 0x0a, 0x1b,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x64,
	0x72, 0x61, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x42,
	0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77,
	0x6e, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x22, 0xb3, 0x04, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x1a,
	0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x18,
	0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x71, 0x0a, 0x1d, 0x61, 0x64, 0x64, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52,
	0x1a, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x71, 0x0a, 0x1d, 0x6b,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x1a, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x5c,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74,
	0x69, 0x70, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x54,
	0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x6b, 0x0a, 0x1b,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x64,
	0x72, 0x61, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x52,
	0x18, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x22, 0x73, 0x0a, 0x15, 0x53, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0x30,
	0x0a, 0x18, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x32, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x1a, 0x4b, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xa9, 0x09, 0x0a, 0x0c, 0x41, 0x6e, 0x6f, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x6a, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x12, 0x22, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x23, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x2e,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x64, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b, 0x2e, 0x67,
	0x65, 0x6e, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x5a, 0x49,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b, 0x69,
	0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61, 0x70, 0x69,
	0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32,
	0x3b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_matching_v2_anon_matching_service_proto_rawDescOnce sync.Once
	file_matching_v2_anon_matching_service_proto_rawDescData = file_matching_v2_anon_matching_service_proto_rawDesc
)

func file_matching_v2_anon_matching_service_proto_rawDescGZIP() []byte {
	file_matching_v2_anon_matching_service_proto_rawDescOnce.Do(func() {
		file_matching_v2_anon_matching_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_matching_v2_anon_matching_service_proto_rawDescData)
	})
	return file_matching_v2_anon_matching_service_proto_rawDescData
}

var file_matching_v2_anon_matching_service_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_matching_v2_anon_matching_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_matching_v2_anon_matching_service_proto_goTypes = []interface{}{
	(FindChatPartnerResponse_Result)(0),       // 0: mobile.matching.v2.FindChatPartnerResponse.Result
	(CancelFindChatPartnerResponse_Result)(0), // 1: mobile.matching.v2.CancelFindChatPartnerResponse.Result
	(RateChatResponse_Result)(0),              // 2: mobile.matching.v2.RateChatResponse.Result
	(EndChatResponse_Result)(0),               // 3: mobile.matching.v2.EndChatResponse.Result
	(DeleteChatResponse_Result)(0),            // 4: mobile.matching.v2.DeleteChatResponse.Result
	(GetRemainingAnonChatsResponse_Result)(0), // 5: mobile.matching.v2.GetRemainingAnonChatsResponse.Result
	(InitiateFriendingResponse_Result)(0),     // 6: mobile.matching.v2.InitiateFriendingResponse.Result
	(GetInterestListResponse_Result)(0),       // 7: mobile.matching.v2.GetInterestListResponse.Result
	(GetUserConfigResponse_Result)(0),         // 8: mobile.matching.v2.GetUserConfigResponse.Result
	(SetUserConfigResponse_Result)(0),         // 9: mobile.matching.v2.SetUserConfigResponse.Result
	(*FindChatPartnerRequest)(nil),            // 10: mobile.matching.v2.FindChatPartnerRequest
	(*FindChatPartnerResponse)(nil),           // 11: mobile.matching.v2.FindChatPartnerResponse
	(*CancelFindChatPartnerRequest)(nil),      // 12: mobile.matching.v2.CancelFindChatPartnerRequest
	(*CancelFindChatPartnerResponse)(nil),     // 13: mobile.matching.v2.CancelFindChatPartnerResponse
	(*RateChatRequest)(nil),                   // 14: mobile.matching.v2.RateChatRequest
	(*RateChatResponse)(nil),                  // 15: mobile.matching.v2.RateChatResponse
	(*EndChatRequest)(nil),                    // 16: mobile.matching.v2.EndChatRequest
	(*EndChatResponse)(nil),                   // 17: mobile.matching.v2.EndChatResponse
	(*DeleteChatRequest)(nil),                 // 18: mobile.matching.v2.DeleteChatRequest
	(*DeleteChatResponse)(nil),                // 19: mobile.matching.v2.DeleteChatResponse
	(*GetRemainingAnonChatsRequest)(nil),      // 20: mobile.matching.v2.GetRemainingAnonChatsRequest
	(*GetRemainingAnonChatsResponse)(nil),     // 21: mobile.matching.v2.GetRemainingAnonChatsResponse
	(*InitiateFriendingRequest)(nil),          // 22: mobile.matching.v2.InitiateFriendingRequest
	(*InitiateFriendingResponse)(nil),         // 23: mobile.matching.v2.InitiateFriendingResponse
	(*GetUserChallengesStatsRequest)(nil),     // 24: mobile.matching.v2.GetUserChallengesStatsRequest
	(*GetUserChallengesStatsResponse)(nil),    // 25: mobile.matching.v2.GetUserChallengesStatsResponse
	(*GetInterestListRequest)(nil),            // 26: mobile.matching.v2.GetInterestListRequest
	(*GetInterestListResponse)(nil),           // 27: mobile.matching.v2.GetInterestListResponse
	(*GetUserConfigRequest)(nil),              // 28: mobile.matching.v2.GetUserConfigRequest
	(*GetUserConfigResponse)(nil),             // 29: mobile.matching.v2.GetUserConfigResponse
	(*SetUserConfigRequest)(nil),              // 30: mobile.matching.v2.SetUserConfigRequest
	(*SetUserConfigResponse)(nil),             // 31: mobile.matching.v2.SetUserConfigResponse
	(*WelcomeTutorialCompleted)(nil),          // 32: mobile.matching.v2.WelcomeTutorialCompleted
	(*AddFriendTutorialCompleted)(nil),        // 33: mobile.matching.v2.AddFriendTutorialCompleted
	(*KinRewardTutorialCompleted)(nil),        // 34: mobile.matching.v2.KinRewardTutorialCompleted
	(*ProfileToolTipShown)(nil),               // 35: mobile.matching.v2.ProfileToolTipShown
	(*ProfileAvatarDrawerShown)(nil),          // 36: mobile.matching.v2.ProfileAvatarDrawerShown
	(*v2.AnonMatchInterest)(nil),              // 37: common.matching.v2.AnonMatchInterest
	(*v21.Uuid)(nil),                          // 38: common.v2.Uuid
	(*timestamp.Timestamp)(nil),               // 39: google.protobuf.Timestamp
	(*v21.ChatId)(nil),                        // 40: common.v2.ChatId
	(*v2.ChatRating)(nil),                     // 41: common.matching.v2.ChatRating
	(*v22.KinAmount)(nil),                     // 42: common.kin.payment.v2.KinAmount
}
var file_matching_v2_anon_matching_service_proto_depIdxs = []int32{
	37, // 0: mobile.matching.v2.FindChatPartnerRequest.interests:type_name -> common.matching.v2.AnonMatchInterest
	0,  // 1: mobile.matching.v2.FindChatPartnerResponse.result:type_name -> mobile.matching.v2.FindChatPartnerResponse.Result
	38, // 2: mobile.matching.v2.FindChatPartnerResponse.find_chat_request_id:type_name -> common.v2.Uuid
	39, // 3: mobile.matching.v2.FindChatPartnerResponse.rejected_expiry_time:type_name -> google.protobuf.Timestamp
	38, // 4: mobile.matching.v2.CancelFindChatPartnerRequest.find_chat_request_id:type_name -> common.v2.Uuid
	1,  // 5: mobile.matching.v2.CancelFindChatPartnerResponse.result:type_name -> mobile.matching.v2.CancelFindChatPartnerResponse.Result
	40, // 6: mobile.matching.v2.RateChatRequest.chat_id:type_name -> common.v2.ChatId
	41, // 7: mobile.matching.v2.RateChatRequest.chat_rating:type_name -> common.matching.v2.ChatRating
	2,  // 8: mobile.matching.v2.RateChatResponse.result:type_name -> mobile.matching.v2.RateChatResponse.Result
	40, // 9: mobile.matching.v2.EndChatRequest.chat_id:type_name -> common.v2.ChatId
	3,  // 10: mobile.matching.v2.EndChatResponse.result:type_name -> mobile.matching.v2.EndChatResponse.Result
	40, // 11: mobile.matching.v2.DeleteChatRequest.chat_id:type_name -> common.v2.ChatId
	4,  // 12: mobile.matching.v2.DeleteChatResponse.result:type_name -> mobile.matching.v2.DeleteChatResponse.Result
	5,  // 13: mobile.matching.v2.GetRemainingAnonChatsResponse.result:type_name -> mobile.matching.v2.GetRemainingAnonChatsResponse.Result
	40, // 14: mobile.matching.v2.InitiateFriendingRequest.chat_id:type_name -> common.v2.ChatId
	6,  // 15: mobile.matching.v2.InitiateFriendingResponse.result:type_name -> mobile.matching.v2.InitiateFriendingResponse.Result
	42, // 16: mobile.matching.v2.GetUserChallengesStatsResponse.daily_earn_kin_amount:type_name -> common.kin.payment.v2.KinAmount
	7,  // 17: mobile.matching.v2.GetInterestListResponse.result:type_name -> mobile.matching.v2.GetInterestListResponse.Result
	37, // 18: mobile.matching.v2.GetInterestListResponse.interests:type_name -> common.matching.v2.AnonMatchInterest
	8,  // 19: mobile.matching.v2.GetUserConfigResponse.result:type_name -> mobile.matching.v2.GetUserConfigResponse.Result
	32, // 20: mobile.matching.v2.GetUserConfigResponse.welcome_tutorial_completed:type_name -> mobile.matching.v2.WelcomeTutorialCompleted
	33, // 21: mobile.matching.v2.GetUserConfigResponse.add_friend_tutorial_completed:type_name -> mobile.matching.v2.AddFriendTutorialCompleted
	34, // 22: mobile.matching.v2.GetUserConfigResponse.kin_reward_tutorial_completed:type_name -> mobile.matching.v2.KinRewardTutorialCompleted
	35, // 23: mobile.matching.v2.GetUserConfigResponse.profile_tool_tip_shown:type_name -> mobile.matching.v2.ProfileToolTipShown
	36, // 24: mobile.matching.v2.GetUserConfigResponse.profile_avatar_drawer_shown:type_name -> mobile.matching.v2.ProfileAvatarDrawerShown
	32, // 25: mobile.matching.v2.SetUserConfigRequest.welcome_tutorial_completed:type_name -> mobile.matching.v2.WelcomeTutorialCompleted
	33, // 26: mobile.matching.v2.SetUserConfigRequest.add_friend_tutorial_completed:type_name -> mobile.matching.v2.AddFriendTutorialCompleted
	34, // 27: mobile.matching.v2.SetUserConfigRequest.kin_reward_tutorial_completed:type_name -> mobile.matching.v2.KinRewardTutorialCompleted
	35, // 28: mobile.matching.v2.SetUserConfigRequest.profile_tool_tip_shown:type_name -> mobile.matching.v2.ProfileToolTipShown
	36, // 29: mobile.matching.v2.SetUserConfigRequest.profile_avatar_drawer_shown:type_name -> mobile.matching.v2.ProfileAvatarDrawerShown
	9,  // 30: mobile.matching.v2.SetUserConfigResponse.result:type_name -> mobile.matching.v2.SetUserConfigResponse.Result
	10, // 31: mobile.matching.v2.AnonMatching.FindChatPartner:input_type -> mobile.matching.v2.FindChatPartnerRequest
	12, // 32: mobile.matching.v2.AnonMatching.CancelFindChatPartner:input_type -> mobile.matching.v2.CancelFindChatPartnerRequest
	16, // 33: mobile.matching.v2.AnonMatching.EndChat:input_type -> mobile.matching.v2.EndChatRequest
	18, // 34: mobile.matching.v2.AnonMatching.DeleteChat:input_type -> mobile.matching.v2.DeleteChatRequest
	14, // 35: mobile.matching.v2.AnonMatching.RateChat:input_type -> mobile.matching.v2.RateChatRequest
	20, // 36: mobile.matching.v2.AnonMatching.GetRemainingAnonChats:input_type -> mobile.matching.v2.GetRemainingAnonChatsRequest
	22, // 37: mobile.matching.v2.AnonMatching.InitiateFriending:input_type -> mobile.matching.v2.InitiateFriendingRequest
	24, // 38: mobile.matching.v2.AnonMatching.GetUserChallengesStats:input_type -> mobile.matching.v2.GetUserChallengesStatsRequest
	26, // 39: mobile.matching.v2.AnonMatching.GetInterestList:input_type -> mobile.matching.v2.GetInterestListRequest
	28, // 40: mobile.matching.v2.AnonMatching.GetUserConfig:input_type -> mobile.matching.v2.GetUserConfigRequest
	30, // 41: mobile.matching.v2.AnonMatching.SetUserConfig:input_type -> mobile.matching.v2.SetUserConfigRequest
	11, // 42: mobile.matching.v2.AnonMatching.FindChatPartner:output_type -> mobile.matching.v2.FindChatPartnerResponse
	13, // 43: mobile.matching.v2.AnonMatching.CancelFindChatPartner:output_type -> mobile.matching.v2.CancelFindChatPartnerResponse
	17, // 44: mobile.matching.v2.AnonMatching.EndChat:output_type -> mobile.matching.v2.EndChatResponse
	19, // 45: mobile.matching.v2.AnonMatching.DeleteChat:output_type -> mobile.matching.v2.DeleteChatResponse
	15, // 46: mobile.matching.v2.AnonMatching.RateChat:output_type -> mobile.matching.v2.RateChatResponse
	21, // 47: mobile.matching.v2.AnonMatching.GetRemainingAnonChats:output_type -> mobile.matching.v2.GetRemainingAnonChatsResponse
	23, // 48: mobile.matching.v2.AnonMatching.InitiateFriending:output_type -> mobile.matching.v2.InitiateFriendingResponse
	25, // 49: mobile.matching.v2.AnonMatching.GetUserChallengesStats:output_type -> mobile.matching.v2.GetUserChallengesStatsResponse
	27, // 50: mobile.matching.v2.AnonMatching.GetInterestList:output_type -> mobile.matching.v2.GetInterestListResponse
	29, // 51: mobile.matching.v2.AnonMatching.GetUserConfig:output_type -> mobile.matching.v2.GetUserConfigResponse
	31, // 52: mobile.matching.v2.AnonMatching.SetUserConfig:output_type -> mobile.matching.v2.SetUserConfigResponse
	42, // [42:53] is the sub-list for method output_type
	31, // [31:42] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_matching_v2_anon_matching_service_proto_init() }
func file_matching_v2_anon_matching_service_proto_init() {
	if File_matching_v2_anon_matching_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matching_v2_anon_matching_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindChatPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindChatPartnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelFindChatPartnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelFindChatPartnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemainingAnonChatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemainingAnonChatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateFriendingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateFriendingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserChallengesStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserChallengesStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WelcomeTutorialCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendTutorialCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KinRewardTutorialCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileToolTipShown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matching_v2_anon_matching_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileAvatarDrawerShown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matching_v2_anon_matching_service_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matching_v2_anon_matching_service_proto_goTypes,
		DependencyIndexes: file_matching_v2_anon_matching_service_proto_depIdxs,
		EnumInfos:         file_matching_v2_anon_matching_service_proto_enumTypes,
		MessageInfos:      file_matching_v2_anon_matching_service_proto_msgTypes,
	}.Build()
	File_matching_v2_anon_matching_service_proto = out.File
	file_matching_v2_anon_matching_service_proto_rawDesc = nil
	file_matching_v2_anon_matching_service_proto_goTypes = nil
	file_matching_v2_anon_matching_service_proto_depIdxs = nil
}
