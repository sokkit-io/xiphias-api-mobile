// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: kikcode/v2/kikcode_service.proto

package kikcode

import (
	v2 "github.com/sokkit-io/xiphias-model-common/generated/go/common/v2"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotifyKikCodeScannedResponse_Result int32

const (
	NotifyKikCodeScannedResponse_OK NotifyKikCodeScannedResponse_Result = 0
)

// Enum value maps for NotifyKikCodeScannedResponse_Result.
var (
	NotifyKikCodeScannedResponse_Result_name = map[int32]string{
		0: "OK",
	}
	NotifyKikCodeScannedResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x NotifyKikCodeScannedResponse_Result) Enum() *NotifyKikCodeScannedResponse_Result {
	p := new(NotifyKikCodeScannedResponse_Result)
	*p = x
	return p
}

func (x NotifyKikCodeScannedResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyKikCodeScannedResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_kikcode_v2_kikcode_service_proto_enumTypes[0].Descriptor()
}

func (NotifyKikCodeScannedResponse_Result) Type() protoreflect.EnumType {
	return &file_kikcode_v2_kikcode_service_proto_enumTypes[0]
}

func (x NotifyKikCodeScannedResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyKikCodeScannedResponse_Result.Descriptor instead.
func (NotifyKikCodeScannedResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_kikcode_v2_kikcode_service_proto_rawDescGZIP(), []int{1, 0}
}

type NotifyKikCodeScannedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Persona ID of the user scanning the code
	ScanningUser *v2.PersonaId `protobuf:"bytes,1,opt,name=scanning_user,json=scanningUser,proto3" json:"scanning_user,omitempty"`
	// Persona ID of the user whose code was scanned by scanning_user
	ScannedUser *v2.PersonaId `protobuf:"bytes,2,opt,name=scanned_user,json=scannedUser,proto3" json:"scanned_user,omitempty"`
	// Nonce contained in the scanned code. The nonce is only used by the receiving client in order to decide whether
	// the scanning users should be added to their contacts or not.
	Nonce uint32 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Optional payload contained in that Kik code. Payloads are only present for "remote" codes (codes targetting bots)
	// The payload should then be transmitted to the bot.
	Payload string `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *NotifyKikCodeScannedRequest) Reset() {
	*x = NotifyKikCodeScannedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kikcode_v2_kikcode_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyKikCodeScannedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyKikCodeScannedRequest) ProtoMessage() {}

func (x *NotifyKikCodeScannedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kikcode_v2_kikcode_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyKikCodeScannedRequest.ProtoReflect.Descriptor instead.
func (*NotifyKikCodeScannedRequest) Descriptor() ([]byte, []int) {
	return file_kikcode_v2_kikcode_service_proto_rawDescGZIP(), []int{0}
}

func (x *NotifyKikCodeScannedRequest) GetScanningUser() *v2.PersonaId {
	if x != nil {
		return x.ScanningUser
	}
	return nil
}

func (x *NotifyKikCodeScannedRequest) GetScannedUser() *v2.PersonaId {
	if x != nil {
		return x.ScannedUser
	}
	return nil
}

func (x *NotifyKikCodeScannedRequest) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *NotifyKikCodeScannedRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type NotifyKikCodeScannedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result NotifyKikCodeScannedResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=mobile.kikcode.v2.NotifyKikCodeScannedResponse_Result" json:"result,omitempty"`
}

func (x *NotifyKikCodeScannedResponse) Reset() {
	*x = NotifyKikCodeScannedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kikcode_v2_kikcode_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyKikCodeScannedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyKikCodeScannedResponse) ProtoMessage() {}

func (x *NotifyKikCodeScannedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kikcode_v2_kikcode_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyKikCodeScannedResponse.ProtoReflect.Descriptor instead.
func (*NotifyKikCodeScannedResponse) Descriptor() ([]byte, []int) {
	return file_kikcode_v2_kikcode_service_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyKikCodeScannedResponse) GetResult() NotifyKikCodeScannedResponse_Result {
	if x != nil {
		return x.Result
	}
	return NotifyKikCodeScannedResponse_OK
}

var File_kikcode_v2_kikcode_service_proto protoreflect.FileDescriptor

var file_kikcode_v2_kikcode_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6b, 0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x6b, 0x69, 0x6b,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6b, 0x69, 0x6b, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x49, 0x64, 0x42, 0x06, 0xca, 0x9d, 0x25, 0x02, 0x08, 0x01, 0x52, 0x0b,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0xca, 0x9d, 0x25, 0x12,
	0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0x9d, 0x25, 0x05,
	0x08, 0x00, 0x30, 0xa0, 0x1f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x1c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6b, 0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x32, 0x82, 0x01, 0x0a, 0x07, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x77, 0x0a,
	0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x2e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6b,
	0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x6b,
	0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x76, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69,
	0x6b, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x6b, 0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x32,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b,
	0x6b, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x76,
	0x32, 0x3b, 0x6b, 0x69, 0x6b, 0x63, 0x6f, 0x64, 0x65, 0xa2, 0x02, 0x12, 0x4b, 0x50, 0x42, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x69, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kikcode_v2_kikcode_service_proto_rawDescOnce sync.Once
	file_kikcode_v2_kikcode_service_proto_rawDescData = file_kikcode_v2_kikcode_service_proto_rawDesc
)

func file_kikcode_v2_kikcode_service_proto_rawDescGZIP() []byte {
	file_kikcode_v2_kikcode_service_proto_rawDescOnce.Do(func() {
		file_kikcode_v2_kikcode_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_kikcode_v2_kikcode_service_proto_rawDescData)
	})
	return file_kikcode_v2_kikcode_service_proto_rawDescData
}

var file_kikcode_v2_kikcode_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kikcode_v2_kikcode_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kikcode_v2_kikcode_service_proto_goTypes = []interface{}{
	(NotifyKikCodeScannedResponse_Result)(0), // 0: mobile.kikcode.v2.NotifyKikCodeScannedResponse.Result
	(*NotifyKikCodeScannedRequest)(nil),      // 1: mobile.kikcode.v2.NotifyKikCodeScannedRequest
	(*NotifyKikCodeScannedResponse)(nil),     // 2: mobile.kikcode.v2.NotifyKikCodeScannedResponse
	(*v2.PersonaId)(nil),                     // 3: common.v2.PersonaId
}
var file_kikcode_v2_kikcode_service_proto_depIdxs = []int32{
	3, // 0: mobile.kikcode.v2.NotifyKikCodeScannedRequest.scanning_user:type_name -> common.v2.PersonaId
	3, // 1: mobile.kikcode.v2.NotifyKikCodeScannedRequest.scanned_user:type_name -> common.v2.PersonaId
	0, // 2: mobile.kikcode.v2.NotifyKikCodeScannedResponse.result:type_name -> mobile.kikcode.v2.NotifyKikCodeScannedResponse.Result
	1, // 3: mobile.kikcode.v2.KikCode.NotifyKikCodeScanned:input_type -> mobile.kikcode.v2.NotifyKikCodeScannedRequest
	2, // 4: mobile.kikcode.v2.KikCode.NotifyKikCodeScanned:output_type -> mobile.kikcode.v2.NotifyKikCodeScannedResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_kikcode_v2_kikcode_service_proto_init() }
func file_kikcode_v2_kikcode_service_proto_init() {
	if File_kikcode_v2_kikcode_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kikcode_v2_kikcode_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyKikCodeScannedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kikcode_v2_kikcode_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyKikCodeScannedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kikcode_v2_kikcode_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kikcode_v2_kikcode_service_proto_goTypes,
		DependencyIndexes: file_kikcode_v2_kikcode_service_proto_depIdxs,
		EnumInfos:         file_kikcode_v2_kikcode_service_proto_enumTypes,
		MessageInfos:      file_kikcode_v2_kikcode_service_proto_msgTypes,
	}.Build()
	File_kikcode_v2_kikcode_service_proto = out.File
	file_kikcode_v2_kikcode_service_proto_rawDesc = nil
	file_kikcode_v2_kikcode_service_proto_goTypes = nil
	file_kikcode_v2_kikcode_service_proto_depIdxs = nil
}
