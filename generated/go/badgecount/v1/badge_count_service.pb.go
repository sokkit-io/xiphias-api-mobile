// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: badgecount/v1/badge_count_service.proto

package badgecount

import (
	_go "github.com/sokkit-io/xiphias-model-common/generated/go"
	_ "github.com/sokkit-io/xiphias-model-common/generated/go/kikoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetUnreadConversationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This should contain the entire set of unread conversations by jid
	//   - IF the entire set of unread conversations exceeds max_repetitions, take the first 200 conversation buckets
	//     as the client sees them.
	ConversationsUnread []*_go.XiBareUserOrGroupJid `protobuf:"bytes,1,rep,name=conversations_unread,json=conversationsUnread,proto3" json:"conversations_unread,omitempty"`
	// this only differs from the size of conversations_unread when the actual number of unread conversations is larger
	// conversations_unread.max_repetitions
	UnreadCount uint32 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
}

func (x *SetUnreadConversationsRequest) Reset() {
	*x = SetUnreadConversationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_badgecount_v1_badge_count_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUnreadConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUnreadConversationsRequest) ProtoMessage() {}

func (x *SetUnreadConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badgecount_v1_badge_count_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUnreadConversationsRequest.ProtoReflect.Descriptor instead.
func (*SetUnreadConversationsRequest) Descriptor() ([]byte, []int) {
	return file_badgecount_v1_badge_count_service_proto_rawDescGZIP(), []int{0}
}

func (x *SetUnreadConversationsRequest) GetConversationsUnread() []*_go.XiBareUserOrGroupJid {
	if x != nil {
		return x.ConversationsUnread
	}
	return nil
}

func (x *SetUnreadConversationsRequest) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

var File_badgecount_v1_badge_count_service_proto protoreflect.FileDescriptor

var file_badgecount_v1_badge_count_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9f, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x58, 0x69, 0x42, 0x61, 0x72, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x69, 0x64, 0x42, 0x0a,
	0xca, 0x9d, 0x25, 0x06, 0x08, 0x00, 0x80, 0x01, 0xc8, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0x71, 0x0a, 0x0a, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x63, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x67, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x69, 0x6b,
	0x2e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x72, 0x70, 0x63, 0x5a,
	0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6b, 0x6b,
	0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x78, 0x69, 0x70, 0x68, 0x69, 0x61, 0x73, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_badgecount_v1_badge_count_service_proto_rawDescOnce sync.Once
	file_badgecount_v1_badge_count_service_proto_rawDescData = file_badgecount_v1_badge_count_service_proto_rawDesc
)

func file_badgecount_v1_badge_count_service_proto_rawDescGZIP() []byte {
	file_badgecount_v1_badge_count_service_proto_rawDescOnce.Do(func() {
		file_badgecount_v1_badge_count_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_badgecount_v1_badge_count_service_proto_rawDescData)
	})
	return file_badgecount_v1_badge_count_service_proto_rawDescData
}

var file_badgecount_v1_badge_count_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_badgecount_v1_badge_count_service_proto_goTypes = []interface{}{
	(*SetUnreadConversationsRequest)(nil), // 0: mobile.badgecount.v1.SetUnreadConversationsRequest
	(*_go.XiBareUserOrGroupJid)(nil),      // 1: common.XiBareUserOrGroupJid
	(*_go.VoidResponse)(nil),              // 2: common.VoidResponse
}
var file_badgecount_v1_badge_count_service_proto_depIdxs = []int32{
	1, // 0: mobile.badgecount.v1.SetUnreadConversationsRequest.conversations_unread:type_name -> common.XiBareUserOrGroupJid
	0, // 1: mobile.badgecount.v1.BadgeCount.SetUnreadConversations:input_type -> mobile.badgecount.v1.SetUnreadConversationsRequest
	2, // 2: mobile.badgecount.v1.BadgeCount.SetUnreadConversations:output_type -> common.VoidResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_badgecount_v1_badge_count_service_proto_init() }
func file_badgecount_v1_badge_count_service_proto_init() {
	if File_badgecount_v1_badge_count_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_badgecount_v1_badge_count_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUnreadConversationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_badgecount_v1_badge_count_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_badgecount_v1_badge_count_service_proto_goTypes,
		DependencyIndexes: file_badgecount_v1_badge_count_service_proto_depIdxs,
		MessageInfos:      file_badgecount_v1_badge_count_service_proto_msgTypes,
	}.Build()
	File_badgecount_v1_badge_count_service_proto = out.File
	file_badgecount_v1_badge_count_service_proto_rawDesc = nil
	file_badgecount_v1_badge_count_service_proto_goTypes = nil
	file_badgecount_v1_badge_count_service_proto_depIdxs = nil
}
